
The Internet Has Arrived 

The World Is Changing 

A revolution is taking place.
It started quietly and has grown to involve much of the world.
On an average day, the following events occur: A scientist in Berkeley, California finishes working on an experiment and rushes to a computer to send a message about the results.
Within minutes, colleagues around the world learn about the experiment.

An investment broker in Houston, Texas sits down at a personal computer and runs a program that accesses current prices on the New York Stock Exchange.
After looking at the list, the broker purchases two stocks and sells another.

A class of elementary school children in Chicago, Illinois are learning to use a computer network.
They run a computer program that searches libraries for a book by Dr.
Seuss.

A college professor in Lisbon, Portugal uses a computer to send a question about an example in a textbook to the author in Indiana.
Later that day, a reply is waiting on the computer.

A grandparent in Boston, Massachusetts uses a computer to inquire about airline flights, make a reservation, and purchase a ticket for a trip to visit a grandchild.

A group of company executives hold a meeting.
One executive is in New York, another in Florida, and a third is on vacation in Colorado.
Each sits in front of a computer that has both a camera and microphone attached.

They see pictures of one another on the screen and hear each others' voices.

A computer program runs at 6:00 PM in Atlanta, Georgia to send a copy of a company's daily sales receipts to a branch office in Paris, France.

A high school student in Taiwan uses a computer to see and hear a tour of the campus at the University of Hawaii.
Later, the student uses the computer to send a FAX to a relative who is visiting Australia.

What do all these events have in common?
In each, people are using the Internet, a communication system that is revolutionizing the way we work and play.

It may seem that the Internet will not affect you, but it will.
In fact, the Internet will affect you soon - it probably has already.
Let's look at some statistics: The Internet currently reaches millions of people in over 61 countries.

Over one-half of all 2-year and 4-year U.S. colleges and universities have access to the Internet.

The U.S. military has been using Internet technology for over a decade; it played a role in military actions such as Operation Desert Storm.

Scientists have been using the Internet since 1980.

The U.S. President and the White House are accessible via the Internet as are other government agencies in many countries.

Numbers Do Not Tell The Story 

The most common assessment of the Internet's significance measures the number of computers that connect to it.

However, conventional computer connections tell only part of the story.
The Internet reaches ships at sea, planes in the air, and mobile vehicles on land.
Private companies provide access to Internet services through the telephone system, making it possible to reach the Internet from any home or office that has a telephone.

To assess the impact of the Internet, one might ask, "What has it affected?"
The answer is, "Almost everything".

So, the question becomes: 
The Internet has arrived: are you ready for it?

Learning About The Internet 

This book answers the question "What is the Internet?
" in the broadest sense.
It examines the origins of computer networking and its application to everyday problems.
It focuses on the services that the Internet provides and helps the reader understand their importance.

Learning about the Internet is not something one can complete in an afternoon learning never stops because the Internet keeps changing.
The Internet is similar to a newsstand - when new information appears, it replaces older information.
Each time you visit the newsstand or the Internet, you can find something new.

Of course, information on the Internet changes much more rapidly than information in a conventional newsstand.
In fact, because information on the Internet comes from computers and automated systems, it can change instantly.

For example, if one accesses weather information twice in a single minute, the information obtained from the two accesses can differ because computers can measure weather and change the report constantly.

In addition to resembling a newsstand, Internet also resembles a traditional library because it has tools that aid the search for information.
In a typical library, for example, one finds a card catalog and a reference desk.
The Internet has similar services that help one find information electronically.

Understanding The Big Picture 

Understanding the Internet can be especially difficult for three reasons.
First, because few people have experience with computer networking before learning about the Internet, one cannot rely on intuition or background.
Second, because models of computers differ, one cannot expect a description of details to apply to all computers.
Third, because the Internet is changing and growing rapidly, one cannot easily find a complete description of the services available or the locations of interesting data.

To avoid becoming overwhelmed with details, we will examine the fundamentals of the Internet.
Instead of focusing on how to use a particular computer, a particular brand of software, or a particular Internet service, we will consider the basics of how the Internet works and how information services use the basic mechanisms.
In essence, we will examine the capabilities of the Internet.

Understanding Internet capabilities makes it much easier to read computer manuals and to use the Internet.
In particular, because most computer manuals specify the details of how to accomplish a task without describing why one needs to perform the task, beginners often find them difficult to follow.
Knowing how the Internet works and the purpose of each service helps put the details in perspective.

Terminology And Technology 

A complex technology, the has spawned a terminology that can be daunting.
This book clearly explains the Internet technology using analogies and examples.
It shows how the pieces fit together, emphasizing basics instead of details.
It discusses the services that the Internet offers, explains the flexibility they provide, and describes how they can be used.

More important, this book introduces technical terminology used for computer networking and the Internet.
Instead of providing a list of terms, early chapters present definitions in a historical perspective that shows how communication systems evolved.
For example, early chapters explain the difference between digital and analog information.
Instead of using computer networks as an example, the chapters relate the terminology to everyday experiences.

Growth And Adaptability 

Part of the mystique surrounding the Internet arises from its rapid success.
While the Internet has grown, dozens of other attempts to provide the same services have failed to deliver.
Meanwhile the Internet continues to expand by adapting to change, both technical and political.
We will examine why Internet technology has worked so well and how it has adapted to accommodate change.

Another amazing part of the Internet story is its incredible growth.
We will look at how the Internet continues to grow and the consequences of such growth.

The Impact Of The Internet 

Perhaps the most significant aspect of the Internet is its impact on society.
Once restricted to a few scientists, it is quickly becoming universal.
It reaches governments, businesses, schools, and homes worldwide.

We will examine how the Internet changes peoples' lives, and what we can expect in the future.
In summary, the rest of this book looks at what the Internet is and what it can do for you.

Organization Of The Book 

This book is organized into four sections.
The first section (Chapters 2 through 6) introduces communication system concepts and terminology.
If you already understand digital and analog communication, universal service, and binary data encoding, you may choose to skim this section.
The second section (Chapters 7 through 10) reviews the history of the Internet and its incredible growth.
The third section (Chapters 11 through 17) describes basic Internet technology and capabilities.
It examines how Internet hardware is organized and how software provides communication.
Be sure to under stand this section; it provides the foundation for later chapters.
The final section describes services currently available on the Internet.
For each service, it explains both how the service works and how it can be used.

A Personal Note 

I still remember an occasion several years ago when a colleague bluntly asked me the question, "What is the Internet?". 
I had been involved with Internet research for many years, and had written a popular college textbook that described the Internet and the principles underlying its design.
I knew many details about the hardware and software systems that comprised the Internet, how the computers were connected, and the details of communication.
I also knew most of the researchers who were working on technical improvements.

What puzzled me most about the question was the person asking - someone who already knew basic technical details and had a copy of my textbook.
What could I say? 

As I contemplated the question, my colleague guessed that I misunderstood and said, "I do not want to know about computers and wires.
I mean, in a larger sense, what is Internet, and what is it becoming?
Have you noticed that it is changing?
Who will be using it in ten years?
What will they do with it?" 

The questions were important because they pointed out a significant shift.
Early in its history, most users of the Internet were the experts who helped build it.
The Internet has outgrown its research beginnings and has become a powerful tool.
It is a facility used by almost everyone.
It is being used in ways that the experts had not imagined.

The World Was Once Analog 

Introduction 

The Internet can carry many forms of information.
This chapter explains analog information, and shows how analog signals can be encoded in digital form.
The discussion uses audio as an example.

Sound, Vibrations, And Analog Recording 

Highway engineers use a simple mechanism to warn motorists of an approaching toll booth.
They install a series of small bumps in the roadway.
When a car passes the bumps, the tires vibrate.
Humans perceive the tire vibration as sound.

The first mechanical phonographs used the same basic idea to reproduce sound.
A pointed stylus, called a needle , traveled across the surface of a cylinder or disc that contained small bumps of recorded sound.
As the needle ran across the bumps, it vibrated a flat diaphragm, producing vibrations that humans perceive as sound.
Figure 3.1 illustrates the idea.

Figure 3.1

An illustration of how bumps on an early phonograph cause a diaphragm to vibrate as the record passes under the needle.

Devices like a phonograph are called analog devices because they record and play an exact analog of sound.
The bumps on a phonograph recording are exactly analogous to the vibrations that make sounds.
For example, the height of the bumps controls the volume.

When the sound is soft, the bumps are nearly flat; when the sound is loud, the bumps are higher.
If there are no bumps at all, a phonograph produces no sound.
To summarize: [1] 

An analog device maintains an exact physical analog of information.
For example bumps on an early phonograph recording correspond to vibrations that we perceive as sound.

Analog Electronic Devices

Although early phonographs were entirely mechanical, modern equipment that reproduces sound uses electronics.
For example, a cassette tape recorder also uses analog technology.
The recorder arranges the magnetic material on the surface of a recording tape to be an exact analog of sound.
When the sound is loud, more of the magnetic material is aligned than when the sound is soft.
In fact, analog can best be understood by thinking about an amount of one substance being proportional to another: the amount of magnetism on a tape is proportional to the volume of sound.

When a cassette tape recorder plays an audio tape, an electronic circuit in the tape recorder senses the magnetism on the tape and produces an electric current that is an exact analog of the magnetism.
When little magnetism exists on the tape, the current is small.
When the tape contains more magnetism, the current is larger.

Thus, An electronic device is analog if the amount of electrical current it generates is proportional to its input .

Many Electronic Devices Are Analog 

Many familiar electronic devices use analog technologies.
For example, AM or FM radios, stereo systems, and televisions all use analog electronic circuits.
In fact, At one time most electronic devices used analog techniques to store, amplify or emit pictures or sounds .

The First Analog Communication 

Analog communication was an important part of early telephone systems.
The first telephones had two basic parts: a microphone to convert sound into an analog electrical signal and an earpiece to convert an analog electrical signal into sound.
Whenever a person spoke into the microphone, the electrical signals carried an analog of the sound along the wire to another telephone where it was converted back into sound.
Because the system used analog signals, a loud sound caused more electric current to flow than a soft sound.

Early telephones used an analog scheme to send voice from one place to another; the amount of electrical current sent between two telephones was proportional to the volume of sound.

Analog Is Simple But Inaccurate

Analog devices are the easiest to understand because most of what we do is analog.
When a human uses a muscle to open a door, the door moves in an exact analog of the force exerted on it.
The volume of a human voice changes in exact analog to the force exerted by the person's diaphragm.
Similarly, the pitch of a human voice is an exact analog of the force a person applies to stretch their vocal cords.

Although analog may be natural and easy for a human to understand, analog devices have drawbacks.
In general, it is impossible to produce an exact analog of all possible inputs.
For example, consider recording the sound of a loud drumbeat on a cassette tape.
The magnetism must be aligned at the place the drumbeat occurs.
However, because the alignment is limited by the available magnetic material, it is impossible for the magnetism to be high enough to record an arbitrarily loud sound.
Furthermore, because playing a cassette wears down the surface, the sound diminishes slightly each time the tape is played.

Inaccuracies also arise because electronic amplifiers are not perfect.
An analog electronic device changes its input signal in unintended ways.
It may mangle the signal, record it inaccurately, or add background noise.

We call the changes distortion .
For example, one can hear the background noise produced by an audio amplifier when the volume is set at maximum and no input is connected.

In summary: An analog device always distorts the input and adds noise .

Sending An Analog Signal Across A Wire 

Whenever an electric current passes along a wire, some of the signal disappears.
Although engineers talk about signal loss , energy is not really lost.
It is simply converted to heat.
The consequence for analog electrical signals is important: as electric current passes along a wire and some of the energy is converted to heat, the signal becomes weaker and weaker.
For example, if an electrical signal contains an analog of sound, the volume of the sound will be lower after the signal passes across a long wire than it was at the start.

For an analog telephone system, the signal loss causes a problem.
It means that the signal becomes weaker as it travels from one telephone to another.
If the telephones are far apart, the signal will be so weak that the sound cannot be heard.
In early telephone systems, the signal loss problem was so severe that telephones only worked in a small local area.

As telephone service expanded, telephone companies solved the problem of signal loss by adding amplifiers to the system.
Amplifiers were placed periodically along wires, to boost the signal after it became weak.
The amplified signal was given enough energy to travel to the next amplifier.
Eventually, the signal reached its destination.
Figure 3.2 illustrates the idea.

Of course, analog electronic devices are never perfect.

Each amplifier along the path between two telephones distorts the signal and adds a little noise that is amplified, along with the signal, by the next amplifier.

The analog telephone system included special filters to block distortion and noise, but doing so also meant the system blocked some legitimate sounds.
The filters themselves distorted the signal as they eliminated unwanted sounds.

Figure 3.2

Telephone systems that use analog communication need to amplify the signal if it travels a long distance.

Digital Music 

A few years ago, the music industry began selling recordings on a new medium known as a compact disc (CD).
Advertisements boast that CDs are better than records because CDs are digital .
When CDs arrived, most people had no idea what "digital" meant, how digital music would sound, or why it was supposed to be better.
If a customer asked what digital meant, he or she would receive a simple definition: A technology is digital if it uses numbers to record information instead of a physical analog like bumps on a record or magnetism on a tape .

The Digital Revolution 

The digital revolution did not start with the compact disc.
The current digital world became possible when scientists at Bell Laboratories invented a solid state switch called a transistor .
The revolution began a short time later when scientists and engineers devised ways to combine transistors in an integrated circuit [2] built out of silicon crystals.

An integrated circuit consists of many electronic components interconnected by wires, built on a square a few tenths of an inch per side.
Through intensive research, manufacturers have found ways to reduce the size of transistors and to make integrated circuits more sophisticated.
Currently, a manufacturer can build an integrated circuit that contains several million transistors.

The importance of integrated circuits lies in their economy.
Because integrated circuits can be manufactured in mass quantities at low cost, it is now possible to mass produce complex circuits that were too expensive to build using individual components.

Many integrated circuits are designed primarily for use in computers.
For example, a microprocessor is an integrated circuit that forms the heart of a modern computer - it contains all the electronic circuitry needed to add, subtract, multiply, divide, or compare numbers.
In addition, a microprocessor can fetch numbers from a computer's memory or store results into memory.

Computers Are Digital 

Unlike the analog devices discussed earlier, a computer is a digital device .
It is called "digital" because: Inside a computer, all information is represented by numbers .

For example, when the user presses a key on a computer keyboard, the keyboard sends a number to the computer.

When the computer paints text or graphics on the screen, it does so using numbers.

Because a computer is digital, microprocessors and other integrated circuits built for use in computers work with numbers.
Because computer circuits are extremely flexible, they can be used in a variety of ways; because they are inexpensive, engineers have used them in many devices.
For example, microprocessors are used in hand-held calculators, automobiles, televisions, refrigerators, microwave ovens, and office equipment.

They control heating units, airplanes, cameras, and traffic lights.

Digital Recording 

Recording sounds in digital form may seem impossible.

After all, we know that sound is a sequence of vibrations of varying pitch and volume.
Sound seems to have little to do with numbers.
Digital recording only works because computer circuits operate at much higher speeds than the human ear and mechanisms exist that translate between analog and digital signals.

Using Digital To Recreate Analog 

To understand digital recording, think of the temperature on a summer day.
In the early morning it can be cool, but the temperature rises rapidly following sunrise.

Around noon it peaks, and begins to fall in early evening.
Suppose you wanted to recreate the exact outdoor temperatures of a summer day inside.
Let's assume you have a heat lamp, a dimmer switch that controls the amount of heat the lamp produces, and a thermometer.

To recreate the temperatures that occur on a given day, you must record the temperatures that day.
You take a thermometer outside and record the temperature periodically (for example, every half hour).
The next day, you take the list of temperatures and the thermometer inside to the heat lamp.
By adjusting the dimmer control, you can raise or lower the temperature of the lamp every half hour to exactly match the outdoor temperature of the previous day.

Computer circuits use the same technique when they record sound digitally on a compact disc.
A conventional microphone generates an analog electrical signal.
The signal travels across a wire to a digital recoder.

Inside the recorder, a computer circuit periodically measures the incoming signal and generates a number that tells the level of the signal at that instant.
Because a computer circuit operates quickly, it can generate thousands of numbers per second.
The set of numbers is saved and transferred to a compact disc.
When someone plays the compact disc, a computer inside the player reads the numbers.
The computer uses the sequence of numbers to recreate an analog electrical signal that matches the original signal.
The output passes through a conventional amplifier to a loudspeaker.

The electronic circuit used to convert an analog signal into a sequence of numbers is known as an Analog-to-Digital converter , often abbreviated A-to-D converter .
An A-to-D Converter measures an electrical signal and produces a numeric value that corresponds to its level.
The computer periodically retrieves numbers from the A-to-D converter and saves them.
Figure 3.3 illustrates the conversion.

Figure 3.3

An integrated circuit that pertorms analog-to-digital conversion; the device takes an analog signal as input and produces a sequence of numbers as output.

To play a compact disc, a computer needs an integrated circuit known as a Digital-to-Analog converter (D-to-A converter).
Figure 3.4 illustrates: 

Figure 3.4

An integrated circuit that performs digital-to-analog conversion; the device takes a sequence of numbers as input and produces an analog signal as output.

To reproduce sound from a digital CD, a computer reads the sequence of numbers from the CD and feeds them into the D-to-A converter, which generates an analog electrical signal.
The signal can then be amplified and played through a loudspeaker.
A computer can send numbers into the converter so quickly that our ears hear the result as continuous sound.

Why Digital? 

In essence, a compact disc simply contains a long list of numbers that specify how to reconstruct an analog signal.
What makes a CD so fascinating is that it does not "wear down" as it is played.
Numbers are encoded on a CD so they can be sensed with the light from a laser.

Thus, nothing touches the CD itself as it is played.

Furthermore, the master recording does not wear down as the manufacturer makes copies each copy is identical to the original.
In addition, a CD does not contain as much background noise as an analog scheme.
For example, between songs a CD contains zeroes, meaning that no electrical signal will be produced.

Summary
Sounds are vibrations.
The most natural representation of audio information is an analog form in which the amount of a physical quantity varies in exact proportion to the sound.
In particular, the height of bumps on a phonograph record or the amount of magnetism on a cassette tape correspond to the loudness of the recorded sound.

Audio information can also be represented using a digital form, which means using a sequence of numbers to represent the sounds.
A digital representation is the most convenient form for computers because computers represent everything as numbers.

There are two important ideas to keep in mind throughout the remainder of this book:

The chief advantage of using a digital representation arises because the information does not become distorted while being stored, copied, or communicated.

Information, including audio and video, can be encoded in digital form.

[1] In practice, a phonograph always produces some noise because the recording surface is not perfectly flat: it contains minor scratches that become worse each time the record is played.

[2] An integrated circuit is informally called a chip.

Basic Communication 

Introduction 

Computer networks interconnect computers so they can exchange data.
Although modern computer networks are complex combinations of hardware and software, early computer networks were much less sophisticated.

This chapter outlines the development of basic communication technologies, and shows how networks evolved.
It introduces terminology and explains how modems work.
The concepts defined here are important throughout remaining chapters.

Communication Using Electricity

Since the discovery of electricity, inventors, scientists, and engineers have worked on ways to use electrical signals for communication.
The principles discovered have resulted in fast, reliable communication systems.
Our knowledge of digital communication can be divided into roughly three historical stages.
The first stage focused on the properties of signals on wires.
The second stage focused on how to use signals to send bits and how to organize the bits into characters.
The third stage focused on how to detect and correct errors that occur during transmission.

Signals On Wires 

Researchers first studied how electrical signals pass across wires.
They learned, for example, that an electrical signal reflects from the end of a metal wire the same way that light reflects from a mirror (the reason that many modern networks require a terminator at the end of every wire).
They also learned that electrical signals lose energy as they pass across a wire (the reason that modern networks either limit the length of interconnecting wires or use electronic devices to amplify signals).
They learned that an electrical signal in a wire emits electromagnetic radiation that can interfere with signals in nearby wires (the reason that high speed networks and cable TV connections use a special cable that encloses the wire in a metal shield).

Information Coding 

Once researchers understood sending electrical signals on wires, they studied ways to encode information in electrical signals.
Much of the work focused on finding ways to encode the human voice for transmission across telephone lines with minimum distortion, but many of the techniques apply to communication in general.

Researchers discovered a technique known as modulation that transmits voice well.
To use modulation, the sender must have a device called a modulator .
The modulator begins with a basic electrical signal that oscillates back and forth regularly.
The basic oscillating signal is called a carrier .
The modulator uses a second signal (e.g., one generated by a human voice speaking into a telephone), to change the carrier slightly.
At the receiving end of the wire, a demodulator device performs the reverse function, which is known as demodulation .
The demodulator is tuned to expect the carrier.
By measuring how much the incoming signal deviates from a perfect carrier, the receiver can recover the second signal (the human voice).
After they determined the range of pitch for the human voice, scientists found a carrier signal sufficient to carry audible information.

MODEM: A Modulator And A Demodulator 

The principle of modulation is still in use in modern communication systems - before two computers in the Internet can communicate across a long cable, they need a modulator at one end and a demodulator at the other.
A customer can install wires within a building, or lease wires from a telephone company between two buildings, across a town, or across a country.
Electrically, the leased wires do not connect to the phone system: whoever leases the wires can only use them for private communication.
When a customer uses a set of wires for communication, the customer must install a device at each end of the connection.
The device is called a modem (an abbreviation for modulator/demodulator).
In fact, a leased communication circuit always contains two independent sets of wires, one set for data traveling in each direction.
A modem contains both a modulator that it uses to send information and a demodulator that it uses for arriving information.
Figure 5.1 illustrates the concept.

Figure 5.1

Illustration of modems that use modulation to send data across a transmission line, when a computer interacts with a modem, it sends and receives digital data; the modem encodes the data for transmission.

Modems are also available that allow communication over an ordinary dial-up telephone connection.
A dial-up modem contains additional circuitry that can dial a phone number or answer an incoming call.
The user must instruct a modem on one end to dial a phone number and a modem on the other end to answer the call.
Once a call has been accepted, both modems can begin transferring data.

A dial-up modem uses an audible tone as the carrier when it encodes data (the carrier is the high-pitched sound one hears in a telephone handset when a modem is in use on the phone line).
Whenever a computer sends data, the sending modem modulates the carrier tone by changing the pitch.
The receiving modem monitors the carrier, and decodes the data when the carrier changes.

Modems Allow Two-Way Traffic

Most modems permit data to be sent between them in both directions.
Recall that each modem contains both a modulator and a demodulator.
Furthermore, the modems are designed so they either use two different carrier signals or agree to take turns sending data.
In either case, data appears to flow in both directions simultaneously.

To summarize: 
A modem is a device needed for communication across a dial-up telephone connection or for long distance communication across a wire.
A modem supports two-way communication because it contains a modulator for the signal being sent and a demodulator for the signal being received.

A Character Code For Digital Information 

As they studied voice transmission, researchers also considered transmission of digital information.
They found ways to encode the basic values of a bit in an electrical signal (e.g., using a positive voltage to encode 1 and negative voltage to encode 0).
In addition, they devised a sequence of bits to represent each letter and digit.

Although the character codes used on modern computer networks use two basic values, they differ from Morse code because each character is assigned a code with the same number of bits.
For example, Morse code uses a single dot for the letter E and three dots for the letter S.
By contrast, most modern character codes assign a sequence of seven O's and l's to each letter.
Having a uniform number of bits for all characters makes character processing faster and the hardware less expensive.
It also simplifies character storage because each character occupies a constant numb er of bits regardless of the specific character.

The American Standard Code for Information Interchange (ASCII) is among the most popular and widespread character codes used throughout the computer and network industry.
ASCII defines a bit sequence for most characters used in English: upper and lower case letters, digits, punctuation, and a few miscellaneous symbols such as the mathematical symbols for less than, greater than, equal, plus, and minus.

The details of the ASCII encoding are unimportant because most people who use computers or networks never see the encodings.
However, the examples shown in Figure 5.2 will help clarify the idea.

Figure 5.2

Examples of the ASCII encoding; the upper and lower case letters each have a code, users never see the encoding.

ASCII uses the 7-bit sequence 1000101 to represent the letter "E", the sequence 1010011 to represent the letter "S", and the sequence 0101100 to represent a comma.

To summarize: 

Many networks use the ASCII code when sending textual information in digital form.
ASCII assigns a 7-bit code to each letter and digit.
Most users never see ASCII because it is an internal detail that remains hidden.

Detecting Errors 

Much of the early work on digital communication focused on error detection and correction.
Researchers studied the errors that occur when sending electrical signals across a wire, and found ways to detect the errors.
For example, they knew that natural phenomena like lightning can cause random electrical signals to appear on wires and become confused with signals that carry information.

They also found that electrical signals on wires can become distorted when the wire carrying them passes through a strong magnetic field (e.g., near an electric motor in a household appliance).

When electric or magnetic interference disrupts signals on a wire, data can be damaged or lost.
For example, if voltage is used to represent a bit, a bolt of lightning that strikes near a wire can cause the voltage to change even if lightning does not hit the wire directly.
The point to remember is: 

When using electrical signals to communicate digital information, electrical or magnetic interference can cause the value of one or more bits to be changed.

To guard against corruption of information caused by random electrical noise, researchers devised mechanisms to detect and correct the problem.
For example, they found that they could detect small errors if they added an extra bit to a character's code and set the extra bit to l if the character had an odd number of 1s, or to 0 if it had an even number of 1s.
In essence, the sender sets the extra bit so that each character has an even number of bits set to 1.

The extra bit is called a parity bit .

Character E will be assigned parity bit I because its 7-bit code, 10001 01, contains an odd number of I bits.

However, character S will be assigned parity bit 0 because its 7-bit code, 1010011, contains an even number of l bits.

To make parity checking work, a receiver must test the parity of each incoming character.
The receiver examines all the bits that arrived, including the parity bit.
The receiver declares that an error occurred if it finds an odd number of bits turned on, and declares that the character arrived undamaged otherwise.
If electrical interference changes one of the bits during transmission, the receiver rejects the character as damaged because it will find an odd number of bits turned on.

Although parity checking helps find minor problems, it does not guarantee that all errors will be detected.
To understand why, think of the bits for a character traveling across a wire.
Random electrical interference can cause some bits that start out as 1 to change to 0, or it can cause some bits that start out as 0 to change to l.
If it happens that in a given character, the electrical interference changes an even number of l bits to Os, the parity bit will still appear to be correct.

Similarly, if the noise changes an even number of 0 bits to ls the parity will also appear to be correct.
As an extreme case, think of what happens if a strong magnetic field changes all bits of a character to zero.
The result appears to have correct parity.
The point is:

Adding a parity bit to each character code before transmission can help the hardware detect errors that occur when transmitting the character across a network.
However, parity alone is not sufficient to detect all possible errors; more powerful techniques are needed.

Indeed, the Internet error checking techniques detect errors that parity alone cannot.
In the rare case that bits become damaged in transit, the receiver declares that an error occurred, and the communication software handles the problem.

Summary 

Researchers have studied the properties of electrical signals on wires, and have learned how to use electrical signals to encode information like voice.
In addition, researchers have found ways to use electrical signals to encode digital information by sending bits.
They devised codes that assign each character a unique string of bits.

In particular, they devised the ASCII code that many computers and computer networks use.

Researchers devised a transmission scheme of particular importance that uses modulation to encode information for transmission.
Modulation starts with a carrier, an oscillating signal such as an audible tone, and uses information to change the carrier slightly before transmission.
The receiver extracts the information by measuring how the incoming signal deviates from a perfect carrier.

A device that provides modulation and demodulation is called a modem; modems are used for sending information a long distance across wires or when sending information across a dial-up telephone connection.
Modems are currently used on almost all transmission lines throughout the Internet.

Researchers also studied transmission errors and found mechanisms like the parity scheme that hardware can use to detect when electrical interference has damaged bits during transfer.
Although parity can help detect errors, it does not solve the problem completely.
The Internet uses more powerful error detection techniques.

Internet: The Early Years

Many Independent Networks

By the late 1970s, computer networking began to blossom.

Several computer manufacturers introduced small minicomputers with sufficient computational power to handle many users.
Because such computers are inexpensive, each department in a large organization can afford one.

To interconnect minicomputers and to permit the rapid transfer of information among them, many organizations began installing Local Area Networks.
Because LAN technology is both inexpensive and easy to install an individual department can purchase, install, and operate a LAN for their machines without consulting a central administration.

The Proliferation Of LANs

Allowing each group within an organization to build and operate a computer network has both advantages and disadvantages.
When granted independence, a group can choose a network technology appropriate for their needs.

They can budget funds to pay for the LAN installation and operation.
They can decide who has access, and can devise policies regarding network use.

Allowing autonomy can also have severe disadvantages.

Most important, because not all computer vendors supply interface hardware for all types of networks~ allowing groups to act independently can encourage a proliferation of many LAN technologies.

Facts About LANs 

To understand how and why local area networks have proliferated, one must understand three facts: 

1.
Engineers have devised many LAN technologies.

LAN hardware can be designed to achieve a combination of speed, reliability, ease of installation, capacity, and cost.
Engineers have designed network hardware for several combinations.

2.
LAN performance determines cost; high performance LANs are expensive.

As one might expect, hardware that transfers data faster costs more money.
The consequence is that a given group may choose to save money by acquiring a LAN that has lower performance.
Indeed, it is possible to install some LANs with only trivial cost.

3.
A particular LAN technology may only work with specific computers.

Recall that bus interface hardware is needed to connect a given computer to a LAN.
A computer vendor may not offer interface hardware for all types of LANs.
In particular, when a computer vendor develops a LAN technology, the vendor usually only sells interfaces for its computers.

Even when the LAN technology is developed by a company that does not sell computers, the company usually only sells bus interface hardware for the most popular computers.

Fact 3 suggests that when a group decides to acquire and install a LAN, choices may be limited by the availability of products.
If the group owns a set of computers, they must verify that interface hardware is available for each computer.
Fact 2 suggests that the choice of a LAN technology may depend on economics.
Two groups within an organization can choose different LAN technologies if they have different amounts of money to spend.
Finally, Fact I suggests that there are many possible technologies from which to choose.

The consequence of the above facts is simple: because each group in an organization can choose a technology that best meets its needs, most large organizations have many LAN technologies in use.
Some are chosen for speed, others for ease of installation or maintenance, and still others for minimum cost.
To summarize:

A LAN technology is chosen for its speed, ease of use, and the availability of interfaces for specific computers.
Most large organizations use many LAN technologies.

LANs Are Incompatible 

The disappointing news about LAN technologies can be summed up succinctly: Various LAN technologies are completely incompatible .

That is, multiple LANs cannot just be plugged together.

For example, suppose a given organization has two LANs, one in the shipping department and one in the accounting department.
Further suppose that someone needs to transfer information from a computer in the shipping department to a computer in the accounting department.

Connecting the two LAN cables does not solve the problem.

There are several technical reasons why one cannot plug together multiple LANs.
First, a given LAN technology is engineered to operate over a limited distance.
Each technology specifies a maximum cable length (e.g., one popular technology specifies that the cable must be 500 meters or Sess).
Adding more distance to a LAN can result in a malfunction.
Second, each LAN technology has its own specification for electrical signals like voltage and frequency; different LAN technologies may be electrically incompatible.
Third, each technology has a way of encoding information (e.g. a form of modulation); the encoding used by one LAN system does not make sense to another.

Wide Area Technologies Exist

In addition to LAN technologies, another form of computer networking emerged in the 1960s and 1970s.
Scientists and engineers devised ways to build networks that connected multiple computers across large geographic distances.

Called Wide Area Networks (WANs) or long-haul network , the long-distance technologies use the same basic mechanisms as earlier long-distance systems.

For example, WANs use modems to send signals across long-distance transmission lines.
However, WANs do more than connect two computers across a single transmission channel - a WAN uses computers to unify a set of transmission lines into a coordinated system.
To do son a WAN includes a smalls dedicated computer at each site that attaches to the transmission line and keeps the network operating independent&rsqb;y from the computers that use it.
The dedicated computer receives an incoming message that arrives from another site and delivers it to one of the local computers.
It accepts a message from any of the local computers and sends the message across a transmission line toward the destination.
To summarize: 

A Wide Area Network technology (WAN) differs from a set of disjoint transmission lines because the WAN includes an additional special-purpose computer at each site that connects to the transmission lines and keeps communication independent af the computers that use the WAN.

To understand how a WAN can be useful, imagine a company with offices in four cities: New York, Chicago, Los Angeles, and Austin.
The company can install a WAN that links computers in each office.
Physically, the WAN might consist of three leased transmission lines: one from Chicago to New York, another from Chicago to Los Angeles, and a third from Chicago to Austin, plus a small, dedicated computer at each site.
Conceptually, the WAN functions much like a LAN except that it operates more slowly.
It allows all the attached computers to communicate.

A WAN understands how transmission lines interconnect computers, and handles the details of passing messages automatically.
In the example above, when a computer in Los Angeles sends a message to a computer in Austin, the message must pass through Chicago.
However, the message does not pass through the company's computers in Chicago - it only passes through the special purpose computer that is part of the WAN hardware.
From the company's point of view, a computer in Los Angeles can communicate with a computer in Austin even when the company's computers in Chicago are temporarily shut down.

Few WANs, Many LANs 

Although WAN technologies became available in the 1970s, early WANs cost much more than LANs.
To compare, think of the cost of a LAN.
By installing a single cable in a building, a company can create a LAN that interconnects many computers.
Furthermore, once the cable is in place, the company can add a connection to a new computer, incrementally growing the LAN as needed.

Unlike the low cost LAN, a WAN requires more planning and significantly more hardware.
To install a WAN, a company must lease long-distance transmission lines as well as acquire modems, special-purpose computers, and the software used by a WAN.
The company also needs interface hardware that connects each of the company's computers to the WAN.
Because transmission lines and dedicated computers that form a WAN were expensive in the 1970s, only a few companies used WANs.
Although more companies use WANs today, LANs still remain much less expensive and more popular than WANs.

WANs and LANs Are Incompatible 

Scientists and engineers have invented a variety of WAN technologies.
Each technology has an independent design, chosen for reliability, speed, distance spanned, and cost.
Each technology chooses the details of voltage and signal modulation techniques.
Thus, most WAN technologies are electrically incompatible with one another; one cannot create a larger network merely by plugging wires from one type of WAN into another.

Many companies choose a single WAN technology and use it to link all their sites, so incompatibility among WANs is not usually a severe problem.
However, a serious problem can arise because WANs are also electrically incompatible with LANs.
Most companies have more than one computer at each site and use a LAN to connect the computers at a given site.
If the company installs a general-purpose WAN to connect the sites, the WAN can only attach to one computer at each site.
Other computers at the site cannot communicate directly across the WAN because incompatibility keeps the WAN isolated from the LAN.

To summarize: Many Local Area Network and Wide Area Network technologies exist, and most are incompatible with each other. 
One cannot produce a usable large network merely by interconnecting the wires from two different networks .

The Desirability Of A Single Network 

Anyone who uses multiple computers that connect to two or more separate network systems understands how inconvenient the scheme can be.
For example, if one computer attaches to a LAN and another attaches to a WAN, neither has access to all resources in the organization.

A computer attached to a WAN can access resources and information on remote machines, but cannot easily access information on local machines.
A computer attached to a LAN can access resources and information on local machines, but cannot access information on remote machines.
Simple tasks that require local access (e.g., printing output on a local printer) are tedious or impossible for machines that only connect to a WAN.
At the same time, tasks that require access to remote parts of the company (e.g., access to a remote database), are impossible for machines that only connect to a LAN.
In some organizations, a user who needs access to both local and remote services must have two keyboards and two display screens on their desk.
Transferring data between the two computer systems can be awkward and time consuming.

In the best of all worlds, each computer in an organization has access to all resources.
Of course, policies on use may restrict the set of resources a given computer or user can access, and systems try to keep resources secure from unauthorized use.
However, it should be unnecessary to manually transfer data from one network to another.
It should also be unnecessary to force users to move from one computer to another merely to access different resources.

The Department Of Defense Had Multiple Networks 

By the late 1960s, the U.S. Department Of Defense became interested in using computer networks.
Because the idea of computer networking was new, little was known about how to build networks or how they could be used.
Through the Advanced Research Projects Agency (ARPA) [1] , the military funded research on networking using a variety of technologies.

By the late 1970s, ARPA had several operational computer networks and had begun to pass technology on to the military.
ARPA projects included a wide area network called the ARPANET as well as networks that used satellites and radio transmission for communication.

ARPA realized the military would face a problem that many organizations with multiple network systems faced: each network connected a set of computers, but no path existed between computers on separate networks.
In essence, each network formed an isolated island that connected a set of computers, with no path between the islands.

Connecting Disconnected Machines 

ARPA research examined how to interconnect all the machines from a large organization.
ARPA started with a few basic ideas, awarded grants to researchers in both industry and academia, and arranged for the researchers to cooperate in solving the problem.
Researchers discussed their findings, and generated new ideas at regular meetings.

Instead of allowing researchers to engage in theoretical discussions, ARPA encouraged them to apply the ir ideas to real computers.
ARPA chose researchers interested in experimental work, and insisted that they build prototype software to test their ideas.

The Internet Emerges 

A key idea in the ARPA research was a new approach to interconnecting LANs and WANs that became known as an internetwork .
The term is usually abbreviated internet [2] , and is applied to both the project and to the prototype network that was built.
To distinguish their internet from other internets, researchers working on the ARPA project adopted the convention of writing internet in lowercase when referring to internetworks in general, and writing Internet with an uppercase I when referring to their experimental prototype.
The convention persists.
The key point is: 

ARPA funded research to investigate ways to solve the problem of incompatible networks.
Both the project and the prototype system that researchers built became known by the name Internet.

The ARPANET Backbone 

The ARPANET was especially important to the Internet project, and was often called the backbone network because it was the central WAN that tied researchers together.
Each researcher working on the Internet project had a computer connected to the ARPANET.

Although having a Wide Area Network in place helped researchers communicate, the ARPANET became a key part of the Internet project because it allowed researchers to attach more than one computer at each site.
Researchers took advantage of the feature and used ARPANET for two purposes.
First, they used the ARPANET like a conventional WAN to connect a computer at each site.

Second, they added an additional connection to experiment with new ideas.
Thus, the ARPANET served as both a standard network that permitted researchers to move data among sites involved in the project, and as an experimental network that allowed researchers to evaluate new network software and applications.

Internet Software 

Computer software forms an important part of the technology that makes it possible to interconnect networks [3] .
ARPA's Internet project produced many innovations to make networking more general and efficient.
Researchers worked individually and in groups to invent, test, and refine new ways of making computers communicate.
The research produced software that made communication possible and useful.

Although the software consists of many programs that interact in complex ways, researchers wanted the software to form an integrated system.
They studied the interactions among various programs to ensure that the actions taken by one program did not conflict with actions taken by others.
The end result is a smooth, apparently seamless software design.
The parts work together so well that most users do not sense the underlying complexity.

The Name Is TCP/IP 

Two pieces of the Internet software stand out as particularly important and innovative.
The Internet Protocol (IP) software provides basic communication.
The Transmission Control Protocol (TCP) software provides additional facilities that applications need.
In informal discussions, researchers identity the entire set of Internet communication software by the initials of these two important parts; usually the term is written with a slash between the names: TCP/IP [4] .

When a more formal name is needed for the set of sottware specifications, researchers use The TCP/IP Internet Protocol Suite .
The formal name is more accurate because it points out that the entire set contains more than just the two protocols.
In the end, however, the simpler name has persisted - both vendors who sell the technology as well as users who acquire and install it use the term TCP/IP .

The Shock Of An Open System 

To encourage vendors to adopt Internet technology, ARPA decided to make the research results public.
Whenever a researcher discovered a new technique, measured network performance, or extended the TCP/IP software, ARPA asked that the researcher document the results in a report.

All the specifications needed to build TCP/IP software, and all the experience installing and using it were documented.
ARPA made the reports available to everyone.

ARPA's practice of publishing network specifications was surprising because most commercial companies that had devised network technologies kept their discoveries private.
In fact, many companies had filed patent applications to guarantee that no other company could use the same techniques.
The idea derived from standard business practice: 

Prevailing opinion suggested that a company selling computer networks could achieve maximum profits by protecting their technology with patents.

The idea seems to make sense.
After all, if a vendor only allows its own brand of computers to attach to its brand of network, sales should increase.
The vendor merely needs to convince an organization to use its network technology, and the organization will be forced to buy the vendor's computers.

In the mid-l970s major computer companies that sold network systems only offered interface hardware that could connect to their own computers.
The technologies included various combinations of LANs and WANs.
Computer professionals apply the term closed to proprietary systems to suggest that they are closed to outsiders (i.e. they exclude computers designed by other vendors).

From its inception, the Internet project aspired to produce an open system that permitted computers from all vendors to communicate.
The open philosophy meant that researchers published all discoveries about the Internet and all specifications needed to build TCP/IP software.

A network system is closed if a company owns the technology and uses patents and trade secrets to prevent other companies from building products that use it.
By contrast,the Internet is an open system because all specifications are publically available and any cormpany can build a compatible technology.

Open Systems Are Necessary 

Computer companies found that, despite their efforts to sell closed systems, customers began to acquire several brands of computers.
Advances in processor and memory hardware made new computer designs possible.
Plummeting costs made personal computers at`fordable.
Organizations like the U.S. military realized that as computer technology evolved, vendors would continually offer new models.
Furthermore, not all software worked on all computers.
A large organization usually has many brands and models of computers because it needs software systems and computers for many purposes.
Only an open network system can be used to interconnect computers from multiple vendors.
In summary: 

A large organization needs an open network system because it acquires computers from multiple vendors: using a closed network system restricts the computers that can connect to the network.

TCP/IP Documentation Is Online 

Most of the researchers that ARPA chose for the Internet project already had experience using computer networks.

They had helped design and build the ARPANET, and had devised applications that used it.
They knew they could use the ARPANET to exchange technical information.
Soon after the Internet project began, they decided to keep all technical documents in computer files accessible over the ARPANET.

Initially, the researchers planned to issue reports in two steps.
After a report was written, it would be made available to other researchers for comments.
After a short time, the author would incorporate all comments and issue a final report.
To implement the two steps, researchers established two series of reports.
When a report was first issued, it was labeled Request For Comments (RFC).
After other researchers sent the author comments and the report was polished, it was labeled Internet Engineering Note (IEN).

Unfortunately, the best laid plans often go astray.

Researchers found that some of the initial reports were sufficient and did not need revision or improvement.

Other reports were rewritten completely, but reissued as an RFC for another round of comments.
Most researchers found it more productive to continue investigating new ideas than to edit old reports.
In the end, RFC reports became the official record of the project and the IEN series was dropped.
The irony is that each of the documents that specifies the technology of the largest, most successful computer network in history has a label that implies the work is unfinished and the author is still waiting tenuously for comments.
To summarize: 

For historical reasons, the documents that define TCP/IP and related Internet technology are called Requests For Comments.

Researchers working on the Internet project had access to all Requests For Comments documents because they were stored on a computer attached to the ARPANET.
Each RFC was assigned an integer number, and an index was kept that listed the title of each number.
At any time, a researcher who wanted to know the details of a particular piece of Internet software could use the ARPANET to retrieve the RFC that contained the information.
If the researcher did not remember which RFC was needed, they could retrieve the index.

Keeping the project documentation accessible across the network enabled everyone working on the project to coordinate their activities and keep software up-to-date with the specifications.
More important, rapid communication among the researchers increased the speed at which the project progressed.

Because RFCs that documented the technical details of TCP/IP and the Internet project were accessible over the ARPANET, work on the project proceeded more quickly.

As the Internet project progressed, the technology reached a stage where prototype software could be deployed and tested.
A fledgling Internet was born.
One of the first applications that researchers devised for the new Internet was a mechanism that could be used to access RFCs.
In fact, almost all the initial applications for the Internet provided some form of communication among the researchers building it.

The Military Adopts TCP/IP 

By 1982, a prototype Internet was in place and the TCP/IP technology had been tested.
A few dozen academic and industrial research sites had been using TCP/IP regularly.
The U.S. military started to use TCP/IP on its networks.

In the beginning of 1983, ARPA expanded the Internet to include all the military sites that connected to the ARPANET.
The date marked a transition for the Internet as it began to change from an experiment to a useful network.

Summary 

The Internet began as a research project funded by ARPA.

Researchers studied ways to interconnect computers that used various kinds of networks.
The name Internet refers to both the project and the prototype network system that researchers built.

Known by the name TCP/IP , the software used to make the Internet operate contains many complex computer programs that work together to provide communication.
The software works so well that it hides the details of the underlying hardware and provides the illusion of a seamless system.

The Internet is an open system because the specifications needed to build TCP/IP software or use the Internet are available to everyone.
Researchers who devised the Internet published technical information in a series of reports that describe the Internet and the TCP/IP software it uses.
For historical reasons, each document in the series is labeled Request For Comments .

A Personal Note 

Recently, while I was attending a technical conference, two attendees stepped into a crowded elevator carrying on a loud, animated conversation.
One of them explained to the other that the Internet had been started as a secret government project to upgrade the "hot line" (the telephone system that ran between Washington and the Soviet Union during the years of the cold war).
I wanted to interrupt the conversation, but T hesitated.
The attendee doing most of the talking explained for the benefit of everyone in the elevator that the military had to cover up the project when Congress heard about it and decided to investigate the cost.
He suggested that the military worked out an agreement with a large corporation.
He said that the corporation paid money that was put into the treasury and, in exchange, the corporation received the technology.
I wanted to interrupt and explain, but the attendee concluded emphatically that the whole episode clearly explained why the corporation's stock prices dropped rapidly during the preceding year.
The pair left chattering and nodding in agreement.

When I stepped off the elevator, I was amused and puzzled.
Later, I realized that something significant had happened.
The Internet had become a powerful force quickly.
To newcomers, it seemed vast, strange, and intimidating.
Novices were shocked and ready to believe almost anything, including preposterous tales.
Others were ready to invent a mythology that could explain it.

[1] ARPA was called the Defense Advanced Research Projects Agency (DARPA) during the latter 19XOs and early 1990s.

[2] Chapter 12 discusses the structure of an internet in detail and shows how the Internet connects multiple networks.

[3] Chapters 13 through 16 discuss the software that makes internetworking possible and efficient.

[4] One pronounces the name by spelling out the letters "T-C-P-I- P".

The Global Internet 

Introduction 

Because it spans many countries, people often refer to the Internet as The Global Internet .

This chapter describes the scope of the Internet and gives examples of how it reaches much of the world.

Early ARPA Networks 

Although ARPA is an agency of the U.S. Government and most of the network research ARPA funded focused on U.S. participants, a few of the research networks included connections to other countries.
For example, ARPA used satellites to experiment with communication to sites in Norway and England.

As ARPA concentrated research funding on the Internet project, it used existing connections outside the U.S. to test Internet technology on a larger scale.
Thus, those sites became the first foreign sites to have Internet access.

Electronic Mail Among Computers

While ARPA researchers worked on the Internet, other U.S. researchers also experimented with networking.
Many of them had used electronic mail for communication with other users on a single timesharing computer.
They realized that if a computer had access to basic communication, its electronic mail system could be extended to send messages to users on other machines.

The researchers built software that used the dial-up telephone system to connect computers, and soon had electronic mail systems on multiple machines interconnected.

Extending electronic mail connections to machines outside the U.S. was trivial.
Because the voice telephone network adheres to a set of standards, systems in multiple countries all interoperate.
Thus, researchers did not need to add additional hardware to make communication possible.
Like its U.S. counterpart, a foreign computer required only a modem and a copy of the software to enable communication.

One early computer network technology that offered electronic mail over the dial-up telephone system came with the UNIX system from Bell Laboratories.
Called the Unix to Unix Copy Program or UUCP , the program handled the details of interacting with a modem, dialing the destination computer's telephone number or accepting incoming calls, and transferring electronic mail messages across the connection.
UUCP "networks" arose as owners of machines agreed to cooperate in the exchange of electronic mail.

BITNET 

Not everyone had a UNIX system.
Researchers who used IBM mainframe computers invented a network that permitted those systems to exchange electronic mail as well.

Called BITNET , the network grew from a grass roots effort.
Technologies like UUCP and BITNET have been adopted in many countries, and some examples of such networks still survive [1] .

For example, although the following countries do not have an Internet connection, they can communicate over a BITNET connection: Bahrain, Colombia, Guadeloupe, Iran, Panama, Saudi Arabia .

In addition, many countries have access to electronic mail through UUCP or similar technologies.
Figure 9.1 Lists the set of countries that have only electronic mail connections.

Networks In Europe 

As computer technology emerged, Europeans began to establish computer networks.
Most countries of Europe have an organization known as the Post, Telegraph, and Telephone (PTT) .
The PTTs are agencies of the government, and have control over many forms of communication including computer networking.

PTTs and other telephone companies have experience working together.
To ensure that all telephone systems throughout the world are compatible, they formed an organization to create standards.
Officially, named the Telecommunication Section of the Internetional Telecommunication Union, the organization usually is known by its acronym, ITUT [2] .
The ITUT publishes documents that contain technical specifications for telephone systems.

For example, the documents specify such details as voltages used on telephone lines as well as international agreements for the assignment of telephone numbers.

Figure 9.1

Countries in 1994 that could send or receive electronic mail over computer networks, but did not have direct connections to the Internet or BITNET. 

When the PTTs became interested in computer networks, they asked the ITUT to create a network standard that would guarantee compatibility.
The ITUT convened a committee that produced a standard for computer networking.
The result is a network technology known as X.25, that is used throughout Europe.

Because the PTTs in Europe followed the ITUT recommendation, it was difficult for European groups to experiment with alternatives like TCP/IP, which is used in the Internet.
The point is: 

Many countries in Europe adopted the X.25 technology for computer networks because PTTs controlled networking and followed ITUT's recommendation for computer networks in the same way that they followed ITUT's recommendations for voice networks.

Despite the restrictions imposed on networking, a few researchers in universities and research labs have managed to develop experimental networks.
In the United Kingdom, for example, a network known as the Joint Academic NETwork (JANET ) has been operational since the 1970s.
With funding from IBM, universities in several European countries established a network called the European Academic And Research Network (EARN) .

EBONE: A European Backbone 

In 1991 several European countries had experimental networks using TCP/IP: a few had connections to the Internet.
Most of the experimental networks connected computers at universities or research labs.
Groups throughout Europe organized themselves into a cooperative.
Their goal was to form a high-speed European backbone network that connected the members and extended the Internet to each.
Figure 9.2 shows a diagram of the resulting European backbone network, called the EBONE .

In 1994, the European backbone organization consists of 21 members, each of whom pays an annual fee.
In exchange for its fee, the member receives reliable network connectivity to other sites and to the US portion of the Internet.
The central organization uses the fees to pay the costs associated with maintaining the backbone network.
For example~ the organization must pay for leased transmission lines (including transmission lines that connect to the U. S.), hardware, and a staff to operate the backbone.
To summarize:

The EBONE is a WAN that spans Europe and connects sites to the global Internet.

EBONE Is The Top Level 

As in the U.S., the European portion of the Internet is organized in a three-level hierarchy.
The EBONE provides the top level that interconnects the countries.
In addition, a region has one or more regional networks that form the second level of the hierarchy.
Each regional network interconnects multiple sites, often inside a single country, and also connects them to the backbone.

At the third level, an individual site can have a local network that interconnects multiple computers at the site.

When two computers at a single site communicate, they use the local network.
Communication between computers at two sites within a single region relies on regional network connections.
When a computer in one region communicates with a computer in another, the data passes up to an EBONE site, across the EBONE, and into the other region.

Figure 9.2

The European backbone, EBONE, and the transmission lines that connect it to the U.S. portion of the Internet in 1994.

Each transmission Line is labeled with its capacity in thousands of bits per second.
High-capacity lines are darkened; proposed connections are dashed.
Each site on the backbone connects to a large set of computers in its country or region.

Internet On Other Continents

The Internet connects countries on all continents.
For example, it covers all of North America and Western Europe, much of South America, Australia, and parts of Asia, Africa, and Antarctica.
In addition it reaches several countries in Eastern Europe and the former Soviet Union.
Figure 9.3 lists countries currently connected by the global internat.

Figure 9.3

Countries or regions with computers connected to the global Internet in 1994

The World Of Internet 

The map in Figure 9.4 provides a graphic illustration of how the Internet covers much of the world.
A copy of this map also appears on the inside front cover of this book.

A Personal Note 

As the Internet grows, I receive messages from many places around the world.
A dozen years ago, I was pleased to receive messages from England and Canada because it was thrilling to imagine network connections that reached to foreign countries.
I was surprised the first time someone in the Soviet Union sent me electronic mail because, at the time I assumed that such communication was forbidden.
I was also pleased the first time I heard from someone in faraway places like Australia, Japan, India, and China.

Although the thrill of foreign communication has faded over the years, I am still pleased to hear from remote places.
For example, I was intrigued by a message from South Africa that asked a technical question about TCP/IP because people studying the details of computer network technologies seemed incongruous with the events reported on the evening news.
Now, of course, communication arrives from around the world.
After all, the Internet is global.

[1] The European Academic and Research Network, EARN, uses BITNET technology.

[2] The ITUT was formerly named the Consultative Committee for International Telephone and Telegraph, (CCITT).

Packet Switching 

Introduction 

This chapter begins an exploration of the basic communication technology that the Internet uses.
It describes the fundamental mechanism all computer networks use to transfer data, and explains why the scheme works well.
Succeeding chapters show how the Internet uses the mechanism.
Understanding how networks function is important because it explains which high-level services are possible.

Sharing Saves Money 

Computer networks do not usually dedicate a single wire to each pair of communicating computers.
Instead, the network system arranges for multiple computers to share the underlying hardware facilities.
Economics motivates sharing: 

Arranging for multiple devices to share a single transmission path lowers cost because it uses fewer wires and fewer switching machines.

Sharing Introduces Delays

Sharing a transmission path is not a new idea, and is not limited to computer networks.
For example, some stores require customers to share a transport mechanism.
The store is divided into two sections: a main showroom for customers and a warehouse for the inventory.
A slow-moving conveyor belt connects the two areas.

When a customer places an order, the order is sent to the warehouse where a clerk assembles the ordered items onto the conveyor belt, which carries them to the showroom.

Such stores often require a clerk to finish sending items from one order before moving to the next one.

Normally, the shared conveyor system works well because each order is small.
If one customer orders a chess set and then another orders a toaster, the chess set will arrive on the conveyor before the toaster.
When a large order appears, however, the shared conveyor can delay many orders.
Imagine, for example, that after ordering a toaster, a customer finds the conveyor belt busy transporting 48 folding chairs.
Because the store does not permit mixing orders on the conveyor, the customer must wait for all the chairs to arrive before receiving the toaster.

The point is: Granting one party exclusive access of a shared transport path can be impractical because it can delay all other parties .

Sharing Wires 

In a computer network, the transmission path between two computers consists of wires [1] .
Many years ago, engineers designing computer hardware and telephone systems came to the same realization: because only one data transfer can occur on a given wire at a given time, multiple devices that share a wire must wait to use it.
For example, in some early telephone systems, subscribers on a street all shared one telephone line.
If two neighbors were talking to each other, their conversation prevented a third person from making a call.

Similarly, when two computers attached to a given network transfer data, all other computers are forced to wait until the transfer completes.

Selectable Channels 

Engineers have devised several solutions to the problem of shared resources.
Cable television systems use one of them.
A cable company transmits multiple signals on a single wire by using multiple channels .

Technically, the encoding uses a scheme similar to the one described for modems in Chapter 5: each channel is assigned a unique frequency, and a carrier at that frequency is modulated to encode information for the channel.
The cable company then mixes the encoded signals for all channels and transmits them across the cable.

A television receiver contains the electronic circuitry needed to separate incoming signals by frequency.
At any time, a person watching the television tunes it to a specific channel.
The television receiver extracts the signal for the selected channel from those that arrive over the cable, and ignores signals on other channels.

Sharing By Taking Turns 

While it is possible to build a computer network technology that uses multiple channels to mix signals on a shared wire, most network technologies do not.

Instead, they use a variation of the conventional idea of taking turns.
Access to the shared resource proceeds by allowing one computer to use the network at a time.

As we can see from the conveyor belt example above, the rules of sharing must be defined carefully or a single computer can de lay others by u sing the shared cable for an arbitrarily long time.

To avoid long delays, network technologies limit the amount of data that a computer can transfer on each turn.
The idea, which was invented in the 1960s, is called packet switching , and the unit of data that can be transferred at one time is called a packet .
Figure 11.1 illustrates how computers use packet switching.

Figure 11.1

An example sequence of packets transferred across a packet switching network as computer A communicates with computer C, while computer B communicates with computer D.

In the figure, four computers attach to a network.
Assume that computer B is sending data to computer D while computer A is sending data to computer C.
Both A and B divide outgoing messages into packets, and then take turns sending the packets.
First A sends one packet to C, then B sends one packet to D.
After B sends its packet, A sends a second packet, and so on.
If A has less data to send than B, its transfer will complete and B can send remaining packets without interruption.

Packet Switching Avoids Delays

Both LANs and WANs use packet switching.
To understand how packet switching avoids delays, think of the conveyor belt analogy.
Suppose that clerks in the warehouse fill orders by sending an item from one order, then an item from another order, and so on.
If a customer orders one small item, it will be placed on the conveyor quickly.
If a customer orders 48 folding chairs, only one chair from that order will be entered on the conveyor before an item from each of the other orders is entered.

The same idea holds for computers.
A computer can divide data into pieces easily.
If A needs to send a long message to C, the computer divides the message into many packets.
If B has a short message for D, the message will fit into a single packet or a few packets.
After A sends one packet of its message, B can send its packet.

Thus, B need not wait for A to finish before it has an opportunity to send packets.
Consequently, short messages need not wait for long transfers to complete.

Each Packet Must Be Labeled 

Each packet sent across a network originates at one computer and is destined for another.
The hardware watches as packets pass across the network.
Whenever the hardware detects a packet destined for its local machine, it captures the packet.
The hardware places a copy of the packet in the computer's memory, and informs the computer that a packet arrived.

To enable network hardware to distinguish among packets, each packet follows the same format.
The packet includes a header at the beginning, and data at the end.
Think of the header as a label that specifies which computer sent the packet and which computer should receive the packet.

Computers Have Addresses 

Each computer on a network has a unique number known as the computer's address .
To identify the pair of communicating computers, the header at the beginning of a packet contains two important addresses: the address of the computer that sent the packet and the address of the computer to which the packet has been sent.
The sender's address is called the source address , while the receiver's address is called the destination address .
Network hardware always uses the numeric addresses to send or receive packets.

The numbers used for addresses depend on the specific network technology.
Some technologies use numbers containing a few digits, while others use numbers of 16 digits.
The important idea is: 

Each computer attached to a network is assigned a unique number called its address.
A packet contains the address of the computer that sent it and the computer to which it is sent.

Packets Are Not All The Same Size 

Although packet switching technologies limit the amount of data in a packets they allow the sender to transmit any size packet up to the maximum.
For example, some network applications allow a user to interact with a remote system by sending keystrokes.
Such applications often send a single keystroke in a packet as soon as the user types it on the keyboard.
Other applications that have larger amounts of data to transfer choose larger packets.

Packet Transmission Seems Instantaneous 

In most packet switching networks, packet transfer occurs quickly.
For example, a typical LAN can transfer one thousand large packets between two computers in a second: it takes slightly less time to send small packets.
To a human, events that require thousandths of a second seem instantaneous.
For example, several people can use computers that attach to a single, shared network without perceiving delay.
While one user runs a word processing application on a remote computer, another can access a remote database.
Each user types input, uses a mouse, and experiences exactly the same response as if the program were run locally.

To summarize:
A packet switching technologies permits multiple pairs of computers to communicate across a shared network with minimal delay because it divides each conversation into small packets and arranges for the computers that share a network to take turns sending packets.

Sharing Is Automatic 

Packet switching technologies allow computers to send data at any time.
One computer can begin to send packets before others are ready to use the network.
As long as only one computer needs to use the network, it can send packets continuously.
As soon as a second computer becomes ready to send data, sharing begins.
Both computers take turns so each receives a fair share of the network.
If a third computer becomes ready, all three share the network equally.
The network also adjusts sharing when a computer stops sending data.
For example, if three computers share a network equally and one of them finishes sending data, the remaining two computers take turns.

More important, a computer does not need to know how many other computers are using the network simultaneously.

The key point is: 

Because packet switching systems adapt instantly as computers become ready to send data or others finish sending data, each computer receives a fair share of network resources at any given time.

Network Hardware Handles Sharing 

Interface hardware handles sharing automatically.
That is, network sharing does not require any "computation", nor do computers need to coordinate before they begin using a network.
Instead, a computer can generate a packet at any time.
When a packet is ready, the computer's interface hardware waits its turn and then transfers the packet.
Thus, From a computer's point of view obtaining fair access to a shared network is automatic - the network hardware handles all the details .

Many Devices Can Use Packet Switching 

Devices such as cash registers, video cameras, bar code scanners, and magnetic strip readers can all connect to a packet switching network.
Many vendors also sell printers that connect to a network.
Because a single network printer can be accessed by all computers on a network, using network printers can reduce costs: each computer does not need a separate printer.

A device like a printer requires special hardware to attach it to a network.
In particular, each device attached to a network must contain a small computer, usually a microprocessor.
The computer receives packets from the network that contain instructions to control the device.
Conceptually, 

Although many types of devices can connect directly to a computer network, each such device must contain a small computer that handles communication.

Relevance To The Internet 

Like most computer networks, the Internet is a packet switching system.
Internet hardware includes physical wires shared among multiple users.
Packet switching allows many communications to proceed simultaneously, without requiring an application to wait for all other communication to complete.
As a consequence, whenever a user transfers data across the Internet, network software on the sending machine divides the data into packets, and network software on the receiving machine must reassemble the packets to produce the data.
For example, a document from a word processor must be divided into packets for transfer across the Internet, and then reassembled into a complete document at the receiving side.
To summarize: 

All data is transferred across the Internet in packets.
A sender divides a message or document into packets and transfers the packets across the Internet.
A receiver reassembles the original message from the packets that arrive.
Packets from many machines traverse the Internet at the same time.

Summary 

The fundamental technique that computer networks use to ensure fair access to shared network resources is known as packet switching.
Before data can be transferred across a network it must be divided into packets.
Each packet contains a header that specifies the computer to which the packet should be delivered; the destination is specified using a number known as the computer's address.
Computers that share access to a network take turns sending packets.
On each turn, a given computer sends one packet.
Although devices like printers can connect to a network, such devices must contain a microprocessor to handle network communication.

[1] Although optical glass cable can also be used, we will use the term "wire" to keep the text readable.

IP: Software To Create A Virtual Network 

Introduction 

The previous chapter describes the Internet as a network of networks, formed by using special-purpose computers called routers to interconnect networks.
Of course, merely connecting hardware together does not make an Internet.
Interconnected computers need software before they can communicate.
This chapter describes the basic software that makes the hardware behave like a single, large network.

Protocol: An Agreement For Communication 

It is impossible for two humans to communicate unless they agree to speak a common language.
The same holds true for computers - two computers cannot communicate unless they share a common language.
A communication protocol is an agreement that specifies a common language two computers use to exchange messages.
The term derives from diplomatic vocabulary, in which a protocol specifies the rules under which a diplomatic exchange occurs.

A computer communication protocol defines communication precisely.
For example, a protocol specifies the exact format and meaning of each message that a computer can send.
It also specifies the conditions under which a computer should send a given message, and how a computer should respond when a message arrives.

Basic Functionality: The Internet Protocol 

A key communication protocol used in the Internet is called, appropriately, the Internet Protocol .
Usually abbreviated IP, the protocol specifies, in great detail, the rules that define the details of how computers communicate.
It specifies exactly how a packet must be formed, and how a router must forward each packet on toward its destination.

Each computer that connects to the Internet must follow the rules of the Internet Protocol.
When it creates a packet, a computer must use the format IP specifies.

When a computer receives a packet, the packet will be an exact copy of the packet that was originally sent, still in IP format.
Furthermore, each router in the Internet expects packets to adhere to the IP format as they pass from one network to another.

IP Software On Every Machine 

Computer hardware does not understand IP.
Therefore, attaching a computer to the Internet does not mean it can use Internet services.
To communicate on the Internet, a computer needs IP software.
Indeed, every computer that uses the Internet must run IP software.

IP is fundamental: all Internet services use IP to send or receive packets.
Because IP is fundamental, each computer usually has a single copy of IP software that all applications share.
On sophisticated computers, the operating system keeps a copy of the IP software in memory at all times, ready to send or receive packets.
In summary, Because all Internet services use the Internet Protocol, a computer must have IP software before it can use the Internet .

Internet Packets Are Called Datagrams 

To distinguish between Internet packets and packets for other networks, we call a packet that follows the IP specification an IP datagram .
The name was chosen to provide intuition about how the Internet packet delivery service handles packets.
As it suggests, the Internet handles datagrams in much the same way that a telegraph office handles telegrams.
Once the sending computer creates a datagram and starts it on a trip through the Internet, the sender is free to resume processing in the same way that a person is free to perform tasks after sending a telegram.
A datagram travels across the Internet independent of the sender, just as a telegram travels to its destination independent of the person who sent the message.
To summarize: Each packet sent across the Internet must follow the format specified by the Internet Protocol. 
Such packets are called IP datagrams .

The Illusion Of A Giant Network 

Although the Internet Protocol defines many communication details, it has an important purpose.
Once every computer on the Internet has IP software installed, any computer can create an IP datagram and send it to any other computer.
In essence, IP transforms a collection of networks and routers into a seamless communication system by making the Internet function like a single, large network.
Figure 13.1 illustrates the idea.

Figure 13.1

The view of the Internet that IP software provides.

Users and application programs treat the Internet like a single large network that allows arbitrary numbers of computers to communicate.

Computer scientists use the term virtual to describe technologies that present the illusion of larger, more powerful computational facilities than the hardware provides.
The Internet is a virtual network because it presents the illusion of a single, large network.
Although the Internet is a network of networks, IP software takes care of the details and allows users to think of "the Internet" as a single network.
Users remain unaware of the Internet's networks and routers, just as telephone subscribers remain unaware of the wires and switches that comprise the telephone system.
The point is:

The Internet operates like a single network that connects several million computers.
IP software allows any computer to send an IP datagram to any other computer.

The Reality Of Internal Structure 

Although users believe the Internet to be a single large network, the Internet contains a complex internal physical structure that users never see.
Figure 13.2 illustrates the concept.

Figure 13.2

A small example of the physical structure that remains hidden inside the Internet.

Each computer attaches to a single network; routers interconnect the networks.

When a datagram travels across the Internet from one computer to another, it must follow a physical path.
At each step along the path, the datagram either travels across a physical network or through a router to another network.
Eventually the datagram reaches its final destination.

Datagrams Travel In Packets 

The IP datagram defines a standard format for all Internet packets.
Choosing a standard packet format may seem like a wonderful idea because it means an Internet packet is not limited to the packet format used by the underlying network hardware.
More important, it means that the Internet packet format does not depend on one particular network technology.

Unfortunately, defining a standard Internet packet format also has a disadvantage.
Each network technology defines its own packet format, and a given computer network only accepts and delivers packets that adhere to the format for its technology - network hardware simply does not understand the IP datagram format.

How can the Internet send IP datagrams across networks that do not recognize the IP datagram format?
The easiest way to imagine a datagram transfer is to consider how overnight shipping services handle letters.
Assume someone has written a letter, placed it in an envelope, and written the name of the intended recipient on the outside.
The letter is much like an IP datagram.
Suppose the sender asks an overnight shipping service to deliver the letter.
The overnight service requires that the letter be placed inside one of their envelopes, and that the name and address of the recipient be written on the outside in the format they specify.
The outer envelope is analogous to a network packet .

Both the inner and outer envelopes contain a recipient name.
Although the names usually agree, they need not be identical.
Consider what happens if the sender knows the exact office address of a secretary at the recipient,s place of business but not the exact office address of the individual to whom the letter is addressed.
The sender can mail the overnight parcel to the secretary for delivery.
In such cases, the inner address and outer address differ.
When the parcel arrives at the address on the outer envelope, the secretary named on the outer envelope opens it and forwards the letter.

Datagram transmission follows the same pattern.
The Internet sends an IP datagram across a single network by placing it inside a network packet.
As far as the network is concerned, the entire IP datagram is data.
When the network packet arrives at the next computer, the computer "opens" the packet and extracts the datagram.
The receiver examines the destination address on the datagram to determine how to process it.
In particular, when a router determines that the datagram must be sent across another network, the router creates a new network packet, "encloses" the datagram inside the packet, and sends the packet across another network toward its destination.

When a packet carrying a datagram arrives at its final destination, local software on the machine opens the packet and processes the datagram.

Every Computer Is Assigned A Unique Address 

To make datagram routing and delivery possible, each computer attached to the Internet must be assigned a unique address.
Like addresses used by conventional networks, the addresses used on the Internet are numeric.

One computer must know the address of another computer before it can communicate, just as a person must know someone's telephone number before calling them on the phone.

Internet Addresses 

The unique number assigned to a computer is called its Internet address , often abbreviated IP address.
Each computer, including routers, needs to be assigned an IP address before the computer can communicate on the Internet.
When an organization connects to the Internet, it obtains a set of IP addresses for the organization's computers from the Internet authority.
If the organization acquires a new computer, an address from the set is assigned to the new machine.

An Odd IP Address Syntax 

Internally, a computer stores an IP address in four binary units called bytes.
Although the exact internal form is unimportant, it helps explain why IP addresses are expressed in an odd syntax.
When an application program needs to display an IP address for a human, or when humans need to type an IP address to a program, the binary address is expressed in a form that is easy for humans to understand: it is written as four decimal numbers separated by periods.
For example, the IP address of one particular computer is: 

The IP address of another computer is: 

Fortunately, users seldom need to type or see IP addresses; most application programs allow humans to enter a name when specifying a computer [1] .

IP Addresses Are Not Random 

IP addresses are like telephone numbers in another way: the assignment of numbers is not random.
Instead, IP addresses are assigned so that all computers on the same network have the same prefix.
The address assignment has been chosen to make it efficient to route IP datagrams through the Internet.

An Example Trip Through The Internet 

An example may help clarify how IP software works.

Consider the example internet that Figure 13.3 shows.

Figure 13.3

An example internet with six networks and three computers attached.

Imagine that computer C1 needs to communicate with computer C3.
To begin, IP software on C1 must create an IP datagram.
Each datagram has a field that specifies the sender's IP address and a field that specifies the destination's IP address.
The datagram that Cl creates contains C3's IP address as the destination and Cl's IP address as the sender's (source) address.

Because the two computers do not attach to the same network, any datagram traveling between them must pass through a router.
C1 sends the datagram across network c to router 1.
Router 1 examines the datagram's destination address, C3, to determine where to send it.
Because the destination lies beyond network b, router I sends the datagram across network h to router 2.
Router 2 examines the destination address and sends the datagram across networkf to router 3.
Router 3 must make a choice between routers 4 and 5.
It chooses to send the datagram across network e to router 4 because router 4 leads to the destination [2] .
Router 4 finds that it can deliver the datagram to its final destination, C3, by sending across network d.
If C3 sends a datagram back to C1, the new datagram follows the same path in the reverse direction.

Of course, computer networks and routers transfer datagrams at incredibly high speed.
If the networks in our example are local area technologies, the entire time required for a datagram to traverse the Internet and a reply to come back takes only a few thousandths of a second.
A human perceives the time required for a complete round trip to be instantaneous.
Even if some of the networks are distant, the delays can be so short that a human does not notice.
As a result, the Internet is so effective when transferring datagrams that it appears to operate like a single, large computer network.

Summary 

The Internet Protocol, IP, specifies the basic rules that a computer must follow to communicate across the Internet.
IP defines the format of Internet packets, which are called IP datagrams.
IP also defines an address scheme that assigns each computer a unique number used in all communication.
More important, IP software makes an interconnected set of networks and routers operate like a single, large network.

Each computer on the Internet must have IP software that allows it to create and send IP datagrams.
Each router also has IP software that knows how to forward datagrams to their destination.
When a datagram arrives at a router, the IP software chooses the path that will lead to the datagram's destination.

[1] Chapter 16 explains the computer names one must enter.

[2] When a router must choose between two paths that both lead to the destination, the router chooses the shortest path.

Clients + Servers = Distributed Computing 

Introduction 

Previous chapters describe the TCP/IP communication protocols that work together to provide reliable data delivery across the Internet.
This chapter describes how application programs use TCP/IP software to provide services across the Internet.
It shows that, despite their diversity, all applications on the Internet follow a single organizational model.
Later chapters discuss specific examples of services and show how the model applies in practice.

Large Computers Use Networks For Input And Output 

Early computers were large and expensive.
As a result, most companies could only afford a single computer.
When networks first appeared, companies used the technology to connect remote I/O devices to their computer.
For example, some remote sites included a printer plus one or more terminals, each with a keyboard and display.

Although a remote device connected to the single central computer across a network, the central computer controlled the device completely.
The arrangement in which a large, central computer controlled small I/0 devices at remote sites led to the term master-slave networking.

Small Computers Use Networks To Interact 

As newer technologies emerged, computers became inexpensive.
Powered by microprocessors, personal computers and scientific workstations appeared.
Although small, a personal computer contains much more than a keyboard and a display.
It also has the ability to process information.

Personal computers use networks in new ways.
First, because a personal computer contains the processing power necessary to send and receive packets, it can communicate with any other computer on its network.

Second, because a personal computer does not depend on a large, central computer for control, it can act independently.
To emphasize the symmetric relationship among computers that communicate with one another, scientists use the terms peer-to-peer networking or distributed computing .

Peer-to-peer networking refers to network technologies that permit arbitrary communication among computers.
The Internet is a peer-to-peer technology because it does not distinguish among connected computers.
A personal computer can contact another personal computer as easily as it can contact a large mainframe.
A large mainframe computer can contact another large mainframe, a medium-size computer, or a small personal computer.

Distributed computing refers to any computation that involves two or more computers communicating over a network.
The computation need not involve arithmetic or numbers.
For example, when two computers exchange electronic mail, they engage in a form of distributed computing because multiple computers cooperate to send and deliver the message.

To summarize: 
Because modern computer networks allow large or small computers to initiate interaction and to interact arbitrarily with other computers, we use the term peer-to-peer networking.

Distributed computing refers to any interaction among computers that share access to a peer-to-peer network.

Distributed Computing On The Internet 

The Internet offers an amazing diversity of services that each involve a form of distributed computation.
For example, one can send a message to a friend, retrieve a file, browse through directories, search a database, print a document, transmit a FAX, or listen to music.

The diverse variety of available services means the Internet offers equally diverse styles of interaction.

In some cases, a user interacts with another human.
In other cases, a user interacts with a remote computer program that offers a service.
In still others, two computer systems communicate without human intervention.

Interactive services allow a user to remain connected for hours or days.
Other services need only milliseconds to supply requested information, and terminate communication almost immediately.
Some services allow users to fetch information, while others allow users to store or update information.
Some services involve only two computer systems, one that sends a request and another that supplies a response; other services involve several computers.

A Single Paradigm Explains All Distributed Computing 

Despite the wide diversity among Internet services and the apparent differences in their use, the software that implements a service always uses a single scheme.
The scheme is called client-server computing .
Client-server computing is not limited to the Internet - it forms the basis for distributed computing.

The idea behind client-server computing is quite simple: some computers on the Internet offer services that others access.
For example, some servers manage files that contain information.
A client program can contact such a server to request a copy of one of the files.
Other servers manage multiuser games.
An individual who wants to play one of the games must use a client program to contact the server and participate in the game.

To understand how a single paradigm can encompass the diversity of services, one needs to know three basic facts.

Programs communicate.

People who use the Internet often say that their computer has communicated with another computer.
Although such statements occur frequently in informal conversations, they hide a technical detail.
Computers do not communicate with other computers - only programs can communicate.
A program running on one computer uses protocol software to contact a program on another computer and exchange messages.
On the Internet, the two programs must use TCP/IP protocol software.
While the distinction between computers and the programs running on them may seem trivial, it is important because it explains how a single computer can engage in multiple conversations with other computers.

TCP/IP does not create or run application programs.

Although the Internet can transfer data from one point to another, it does not automatically start a program on the receiving machine.
In a sense, the Internet works like a telephone system - it allows one program to call another, but the called program must answer the call before communication is possible.
Thus, two programs can only communicate if one of them starts running and agrees to answer calls before the other program contacts it.

Computers can run multiple programs.

Even the slowest, smallest computers can run more than one program at a time.
It may seem strange to think about a computer running more than one program because most computers contain a single processor.
However, an operating system keeps multiple programs running by switching the processor among them rapidly.
It allows the processor to work on one program for a short time, then it moves the processor to another program for a short time, and so on.
Because a computer,s processor can execute several million operations per second, switching it among multiple programs gives a human the impression that the programs all run at the same time.
For example, a user can have three activities in three separate regions on the display that each appear to proceed simultaneously.

Knowing that programs communicate and that a computer can run multiple programs at one time explains an apparent mystery: how a single computer can provide service to multiple users at the same time.
Many Internet services use multiple copies of a program to permit multiple users to access the service simultaneously.
For example, a single computer can receive and store incoming electronic mail from many other computers at the same time.
To do so, it creates multiple copies of the program that accepts incoming e-mail.
Each computer that sends mail communicates with a single copy of the program.
Because the processor can switch among the copies rapidly, all transmissions appear to proceed simultaneously.
To summarize: 

Communication across the Internet always occurs between a pair of programs; one initiates a conversation, and the other must be waiting to receive it.
Because a given computer can run more than one program at the same time, a single computer can appear to engage in multiple conversations simultaneously.

Programs Are Clients Or Servers

Each computer program that communicates can be classified in one of two categories.
Any program that offers a service belongs in the server category; any program that contacts a service belongs in the client category.

Usually, people who use Internet services run client software.
For example, a typical application program that uses the Internet to access a service becomes a client.

The client uses the Internet to communicate with a server.
For some services, the client interacts with the server using one request.
The client forms a request, sends it to the server, and awaits a reply.
For other services, the client engages in a long-term interaction.

The client establishes communication with the server, and then continuously displays the data received from the server, while it transmits keystrokes or mouse input to the server.

A Server Must Always Run 

Unlike client software, a server program must always be ready to receive requests.
A client can contact a server at any time; the server has no warning.
Usually, server programs only run on large computers that allow multiple servers to execute simultaneously.
When the system first begins execution, it starts one or more copies of each server program running.
A server continues to execute as long as the computer continues to run.

If a computer loses power or the operating system crashes, all servers running on the computer are lost.

When the computer that offers a service crashes, clients actively using a server on that computer will receive an error message.
Any client that attempts to establish communication with a server while the computer is down will also receive an error message.

Summary 

Unlike older networks that connected terminals to large, central computers, the Internet provides peer-to-peer networking.
It allows an arbitrary computer to communicate with any other computer.

The Internet offers a wide variety of services that use many styles of interaction.
Despite apparent differences among the available services, all software on the Internet uses the same general structure.
The structure is known as client-server computing.

In a client-server environment, each program must be classified as a client or as a server.
A server program offers a service.
Usually, computers that offer services start the server software running automatically when the computer is powered on.
The server remains running, ready to accept an incoming request at any time.
Users usually run client software when they access a service.
A client program contacts a server, sends a request, and displays the server's response.

Why The Internet Works Well

Introduction 

Previous chapters describe the basic Internet technology, including TCP/IP software.
This chapter considers reasons for the Internet's success and the lessons that can be learned.

The Internet Works Well 

The Internet is a marvel of technical accomplishment.
The basic TCP/IP technology has accommodated growth and changes that the original designers did not imagine.

While the number of computers on the Internet has grown exponentially, TCP/IP technology has accommodated the increase in size.
When traffic on the network also grew exponentially over the previous decade; TCP/IP technology tolerated the additional packets.
Although computers now operate 200 times faster than the computers that existed when TCP/IP was first built, new computers can communicate across the Internet with each other and with older computers.
Despite an 800% increase in the speed of the central internet WAN, TCP/IP protocols have not changed; the same design continues to operate correctly at the higher speed.

Why is TCP/IP technology so successful?
How could a technology from a research project become the foundation of the world's largest computer network system?
What lessons have we learned from the Internet project?
Obviously, no single technical decision results in the overwhelming success of a complex system like the Internet.
However, a poor design choice can ruin an otherwise excellent plan.
Remaining sections of this chapter examine some of the best design choices in TCP/IP and draw lessons from the Internet project.

IP Provides Flexibility 

The Internet Protocol provides the flexibility needed to accommodate a wide range of underlying network hardware.

- Wide Area Network technologies or Local Area Network technologies.
- Networks that operate at the highest speeds or networks that operate at the slowest speeds.
- Networks that guarantee no packet loss or networks that provide only best effort delivery.
- Wireless networks that use radio for communication, networks that send signals across wires, or networks that send signals across glass fibers.
- Combinations of the above.


In summary, IP allows the Internet to include almost any type of computer communication technology.

The secret of IP's success stems from a tolerant approach.
Because it does not demand much from the network hardware, IP tolerates almost any mechanism that can send bits from one location to another.
In terms of the design: 

The Internet Protocol accommodates many types of hardware because it makes almost no assumptions about the underlying network hardware.

Although IP makes minimal assumptions about networks, all implementations of IP must use exactly the same rules for communication.
To ensure compatibility among implementations of TCP/IP, complete specifications for the protocols have been written in documents informally called standards .
TCP/IP standards include an exact specification of how to send IP datagrams on each type of network.
Whenever a new network technology appears, a new Internet standard document is written that describes how to use the technology with TCP/IP.
The specifications form an important part of Internet literature because they guarantee that all computers and all routers use exactly the same format when sending a datagram across a network.
Thus,

Because TCP/IP standards documents specify the exact way to send IP datagrams on a given type of network, computers and routers from multiple vendors always agree on the details.

TCP Provides Reliability 

TCP and IP form a complementary pair that work together well.
TCP handles communication problems that IP does not handle, and provides applications with reliable communication.

Interestingly, TCP needs to compensate for differences among the various types of network hardware that IP can use.
For example, although sending a datagram across a satellite channel takes tenths of seconds, sending a datagram across a LAN takes only one or two thousandths of a second.
A single copy of the TCP software must handle both.
Similarly, although a LAN seldom or never drops packets, a Wide Area Network can lose a significant portion.
TCP software must be able to use either technology efficiently.

TCP also handles the most difficult problem found in packet switching systems: rapid changes in the performance.
Computers tend to send information in bursts - the computer remains quiet for a while, then emits data for a short time, and then resumes its quiet state.
For example, when a user first starts an application, the application may need to interact with a server (e.g., to fetch a file or to obtain the first screen of information).
If the user stops to think, move the mouse, or enter data on the keyboard, the application stops communicating with the server.
Although the Internet has sufficient capacity to handle datagrams sent among many computers, it can become temporarily overloaded and slow down if too many computers send a burst of datagrams at exactly the same time.

Like other packet switching systems, the Internet can experience bursts of traffic or idle periods.
If many computers happen to emit datagrams at the same time, a temporary traffic jam slows down delivery.
TCP must watch for delays and know to wait until the congestion clears.

The secret of TCP's success arises from the way it automatically adapts to change.

Because it constantly monitors conditions on the Internet and automatically adapts, TCP makes reliable communication possible even though Internet experiences temporary congestion.

TCP/IP Software Was Engineered For Efficiency 

In any complex computer system, engineers must choose among a variety of possible designs, TCP/IP protocols have been carefully designed to run efficiently.
For example, TCP/IP is designed so it does not require extensive computation when sending or receiving a packet.

In addition, TCP/IP is designed so it does not send more than the minimum network packets required to communicate.

The efficient design permits TCP/IP software to run on small, slow computers as well as fast, large computers.

Thus, TCP/IP works well on personal computers that do not have as much processing power or memory as large computers.

TCP/IP Research Emphasized Practical Results 

Scientists and engineers working on the Internet project took a practical approach to research.
Instead of discussing vague possibilities, they decided to build, test, and measure a working communication system.
They used experimental evidence to judge all new proposals and ideas.
For example, before any new addition to the TCP/IP specifications was approved, two programmers had to build and test software on at least two types of computers.

Furthermore, the programmers had to demonstrate that the two implementations could communicate.

In a keynote address at the INTEROP 92 conference, David Clark [1] characterized the style of development used for TCP/IP and the Internet as rough consensus and working code .
The phrase captures a simple idea: although much of TCP/IP arose from a consensus among researchers, no idea was accepted until it had been implemented and demonstrated.

To emphasize pragmatics and to make implementations interoperate, researchers working on the Internet project urged one another to design software that tolerated errors or unexpected packets.
They challenged one another to build software that would anticipate possible mistakes or flaws in the software on other computers, and tried carefully not to violate the Internet specifications.

Implementation and testing always preceded TCP/IP standardization.
Writing and testing programs often uncovered ambiguities and omissions in the design or documentation, and forced designers to correct problems early.
As a result, considering the complexity of the protocols, TCP/IP standards documents have had few problems.

The Formula For Success 

Many people who encounter the Internet project and success of the TCP/IP technology ask, "What lessons were learned?".
Some ask more pointedly, "How can I repeat the success with research projects at my organization?".

Even from an insider's perspective the questions are difficult to answer because the project involved many people working together over several years.
Here are a few highlights: 

TCP/IP protocol software and the Internet were designed by talented, dedicated people.

The Internet was a dream that inspired and challenged the research team.

Researchers were allowed to experiment, even when there was no short-term economic payoff.
Indeed, Internet research often used new, innovative technologies that were expensive compared to existing technologies.

Instead of dreaming about a system that solved all problems, researchers built the Internet to operate efficiently.

Researchers insisted that each part of the Internet work well in practice before they adopted it as a standard.

Internet technology solves an important, practical problem; the problem occurs whenever an organization has multiple networks.

Summary 

The Internet represents an incredible technical accomplishment.
Although careful planning and attention to detail contributed to its success, agreement among researchers to demonstrate a practical, working system forced them to demonstrate ideas and eliminate weaknesses.

[1] Dr.
David Clark served as the Internet Architect from 1983 through 1989.

Bulletin Board Service (Network News) 

Introduction 

The previous chapter explains the Internet electronic mail service and shows how it can be used to exchange memos.
This chapter describes an Internet service that extends the use of memos to allow an individual to join one or more discussion groups and participate in discussions with other members of the group.
Electronic bulletin boards are among the most well-known services available on the Internet, and the discussions encompass a wide variety of topics.
After examining how the service appears to an individual and reviewing the underlying mechanisms, the chapter provides hints about how to use bulletin boards and electronic mail.

Description Of Functionality

An electronic bulletin board service allows a person to participate in multiple discussion groups, where each group focuses on a specific topic.
- Select one or more discussion groups of interest.
- Periodically check to determine whether new items have appeared in a discussion and, if they have, read some or all of them.
- Post a note to the discussion group for others to read.
- Post a note that responds to an item someone else has written.


Conceptually, the Internet's electronic bulletin board service fills the same role for Internet users that conventional bulletin boards fill in everyday life - it allows individuals to post notices that others can read.

In practice, the Internet provides access to thousands of electronic bulletin boards, each of which contains an ongoing discussion about a single topic.
For that reason, an electronic bulletin board service is sometimes called a computer discussion group or a computer conference service .

To enable efficient discussion among an arbitrarily large group of people, an electronic bulletin board service combines features of many communication mechanisms.

Like a conventional bulletin board, an electronic bulletin board allows anyone to post a message for others to see.

Like a newspaper, an electronic bulletin board service distributes each message to many subscribers.

Like a newsletter from a club or social group, the messages posted to a given electronic bulletin board focus on a single topic of interest.

Like an electronic mail service, an electronic bulletin board service propagates copies of each message quickly.

Like an informal discussion at a social gathering, an electronic bulletin board permits an individual to listen to a conversation, ask questions, occasionally interject small comments, or contribute lengthy statements.

Many Bulletin Boards With Diverse Topics 

Internet electronic bulletin boards cover a widely diverse group of topics.
For example, the Internet has bulletin boards about science, humor, politics, cooking, physical fitness, comic books, science fiction, poetry, products or services, movies, stock prices, television shows, popular music, and computers.
Although many of the discussions can be understood by an average person, some require highly specialized knowledge, and some are meaningful only to someone who works at a particular company or lives in a particular country.
Consequently a bulletin board can be restricted to a few computers, a single organization, or a small geographic area, or it can be distributed to sites throughout the world.
For example, one bulletin board that contains a discussion of politics in Alberta, Canada is distributed only to nearby sites.

Part of the reason for the diversity of electronic bulletin boards arises from the ease with which they can be created.
After a group creates an electronic bulletin board and starts a discussion, interesting side discussions inevitably arise.
For example, suppose someone mentions a particular brand of cookware in a discussion of cooking.
If others who read the message respond by contributing their opinions on cookware, a new discussion results.
If the discussion of cookware continues to gain popularity, participants can choose to create a new bulletin board and move the cookware discussion to that bulletin board.
Dividing a bulletin board is analogous to the way people form a small discussion group at a party: it allows multiple conversations to proceed without interference.
The point is: 

Because a new electronic bulletin board can be created easily and dividing discussions by topic helps focus the discussion on each bulletin board, many bulletin boards have been created.

Network News 

The major electronic bulletin board service available on the Internet is called network news , often abbreviated netnews .
The netnews system uses the term newsgroup to refer to each individual bulletin board (i.e., each discussion group), and article to refer to a message that has been sent to the newsgroup for everyone to see.
Each article submitted to a newsgroup resembles an electronic mail message - it can be as short as a single line of text or can contain many pages.
Like an e-mail message, an article has a header that includes a From line to identify the sender.

Netnews originated as part of an early computer network that used dial-up modems - to place telephone calls between computers and exchange information.
Originally, sites exchanging network news over dial-up connections used the term USENET to refer to their "network" of computers.
As networks began to grow, USENET participants invented ways to communicate network news over other technologies.
As USENET sites acquired Internet access, many changed their netnews communication from the dial-up telephone system to the Internet.

Although most sites that participate in network news now receive information over the Internet, those sites that do not have Internet access continue to participate in netnews using other communication networks, including BITNET and the dial-up telephone system.
The term USENET now refers collectively to all sites that participate in the exchange of network news, regardless of the type of network they use.

Newsgroup Names 

The netnews system assigns each newsgroup a unique name.

Users enter a newsgroup name when they want to join the newsgroup and participate in the discussion.
Each newsgroup name consists of alphabetic strings separated by periods [1] .
The first part of a newsgroup name identifies the type of the group, while successive parts of the name identify the subject and a particular topic within that subject.
For example, the newsgroup: rec.sport.baseball contains a discussion of baseball.
Its name begins with rec , which classifies the newsgroup as one that contains recreational subjects.
The second part of the name identifies the general subject as a sport , and the third part of the name, baseball , identifies a particular sport.

Figure 19.1 lists a few of the major newsgroup classifications: 

Figure 19.1

Examples of major newsgroup classifications used by network news.

Obtaining Network News And The Software To Read Articles 

Before a user can read network news, the user must have access to a computer that participates in network news and software to read articles.
In most cases, an individual does not join the network news system.
Instead an organization (e.g., a company) obtains a connection to the network news service.
The organization receives one copy of articles that appear each day, and provides users in the organization with the software needed to join newsgroups and read articles.

A connection to the network news service, called a newsfeed , is not difficult to obtain.
In fact, the entire network news service operates by mutual cooperation - when a new site first appears, a nearby site that already receives network news volunteers to pass on a newsfeed.
Participating sites share the tacit understanding that at a later date, when additional sites appear, the new site will volunteer to pass on another newsfeed.
Thus, the set of sites that exchange network news continues to grow incrementally.

A computer that connects to the network news system needs software to accept incoming news articles and store them on disk as well as application software that allows users to read articles; such software is available for most computers at no cost.
For example, network news software has been written for computers manufactured by IBM, Apple, Digital Equipment Corporation, Sun Microsystems, and other vendors.
Several major versions of the network news software have been created over the past thirteen years [2] .

How Network News Appears To A User 

When an individual reads an article in a newsgroup, the article appears in the same general form as an electronic mail message: it consists of a text message, separated into a header and a body by a blank line.
Like the header on an e-mail message, the header on a netnews article contains a From line that supplies the electronic mail address of the person who posted the article, a Date line that gives the date and time the article was sent, and a Subject line that lists the topic of the article.
It can also contain other lines such as a Distribution line that restricts dissemination of the article.

Checking For News Articles 

The network news system does not notify a user when activity occurs in a newsgroup.
Therefore, a user who participates in network news must check regularly for new articles in any of the newsgroups he or she is reading.

Usually, a user checks network news at least once a day or whenever they log into the computer.
To check news, a user runs an application program.
The application scans all newsgroups the user has been reading, and reports whether any new articles have appeared.

To know exactly which articles each user has read, the news reading software maintains a record of activity.

Whenever a user joins a group, the software records the name of the newsgroup.
Each time a user reads an article, the software updates the saved information.
When a user asks whether new items have appeared, the software uses the saved information to determine which articles the user has read.
If new articles have been added to any of the newsgroups the user has been reading, the program reports them.
To summarize: 

Because the network news software does not automatically inform a user when a new article arrives in a newsgroup, a user who participates in network news must remember to check for new articles regularly.
The network news software keeps information that allows it to determine which articles each user has read.

Article Expiration 

Because each article in a newsgroup occupies disk space, it cannot be kept in the computer forever.
Usually' a computer system administrator instructs the network news software to erase any article after a specified number of days.
For example, an administrator can choose to discard any article that becomes two weeks old.

Although automatic article expiration helps conserve disk space, it complicates checking for new articles.
If a user waits too long to check the newsgroup, the article may disappear before the user has read it.
To summarize:

Because most computer system administrators establish policies that cause articles to expire after a fixed time, any user who participates in network news must remember to check for new articles regularly or the local computer system may erase articles before the user has read them.

Reading Network News 

Reading network news is straightforward.
To read articles, a user starts an application program called a news reader; many such programs exist.
Some permit a user to select items using a mouse, while others require the user to enter keystrokes.
Despite minor differences in the interface, all news readers provide the same general functionality.
When invoked, a news reader checks all the newsgroups that the user has joined and prints a summary of how many new articles have appeared in each.
Figure 19.2 shows an example of the way one news reader formats the summary: [3] 

Figure 19.2

An example of the summary a news reader presents.

The summary contains one line per newsgroup that reports how many new articles have appeared beyond those that the user has already read.
If someone creates a new newsgroup, additional lines follow the summary to announce the newsgroup.
The example summary lists four newsgroups that a user has been reading.
Their topics are: Harley-Davidson motorcycles, books, Japan and Japanese culture, and children.
The summary only lists those newsgroups that contain new articles (i.e., articles that have arrived since the user last accessed netnews).

Selecting Articles 

After printing a summary of new articles, a news reader allows a user to read the new articles.
Before displaying an article, it prompts the user to ask whether the user wishes to read the article or skip it.
For example, a news reader that uses keyboard input prints a prompt in the following format: 1 unread article in rec.motorcycles.harley read now? &lsqb;ynq&rsqb; and waits for the user to respond.
The user can enter y (for yes ), n (for no ), or q to quit reading news at the present time.

If a user enters n when asked, the news reader skips the article and moves to the next one.
If a user enters y, the news reader displays the article.
The display starts with an article number followed by the contents:

Article 530 in rec.motorcycles.harley : 
From: rick@companyl.somewhere.ccm .

Newsgroups: rec.motorcycles.harley, soc.culture.japan .

Subject: Harley-Davidson in Japan.

Date: 9 Feb 1994 15:35:56.

Organization: Somewhere Incorporated, Fresno, California.

Lines: 6.

Distribution: world.

NNTP-Posting-Host: nserve.companyl.somewhere.con .

Folks, A friend of mine told me that Harley-Davidson went to Japan to sell motorcycles in 1930.
He says that H-D started the Japanese motorcycle industry, and that the Japanese bikes eventually outsold Harley-Davidson.
Is there any truth to the rumor?
Does anyone know of a book that tells the story? 

If an article is too long for the screen, the news reader displays one screenful at a time.
After displaying the lines that fit on a screen, the news reader prints a message on the screen (usually the word more ), and waits for the user to press the space bar before moving to the next screenful [4] .

After a user reads an entire article, the news reader prints another prompt.
For example, the prompt can have the following format: End of article 530 (of 530),what next? &lsqb;npq&rsqb; .

The first number in the prompt repeats the article number, while the second tells how many articles are in the newsgroup.
In the example, the user has just read the last article in the newsgroup (article 530 out of a possible 530).
At the prompt, a user can enter p to move to the previous article, or q to quit reading the newsgroup.
If more articles exist, the user can enter n to move on to the next article.
In addition, a user can enter 5 followed by a filename to save a copy of an article in a file on disk.

After a user quits reading articles in a particular newsgroup, the news reader software moves to the next newsgroup that contains unread articles.
The example summary in Figure 19.2 reports seven unread articles in four newsgroups.
The news reader program continues though all seven articles.
When a user finishes reading the last unread article in all newsgroups or instructs the news reader to quit, the program exits.

Subscribing And Unsubscribing To Newsgroups 

How does the news reader application know which newsgroups interest each user?
The first time a user invokes the news reader, he or she begins with a set of newsgroups chosen by the site administrator.

Often, the initial list includes local newsgroups that the organization has created to communicate with employees (e.g., a newsgroup that contains company notices).
Each time a user reads netnews, the news reader provides a list of new newsgroups, and allows the user to subscribe if any seem interesting.
A user can also unsubscribe from a newsgroup at any time.
Whenever a user finishes reading network news, the news reader saves information about the newsgroups to which the user remains subscribed and the articles the user has read in each group.
Whenever a user starts the news reader, it extracts and uses the saved subscription information.

Netnews handles the subscriptions without any centralized registration: 

Netnews software handles newsgroup subscriptions locally; the software keeps information about the newsgroups a user has joined and the articles the user has read in a file on the user's disk.

Submitting An Article 

Submitting an article to a network newsgroup is as easy as sending electronic mail.
A user invokes an application that works like a word processor- it allows the user to compose and edit a message, and then send the message to one or more newsgroups.
A line in the header specifies the names of newsgroups to which the message should be sent similar to the way the contents of a To line specifies recipients for an electronic mail message.

In addition to composing a message from scratch, a user can form a reply to an existing article.
To do so in a keyboard-oriented news reader, a user types r at the prompt after a message.
The news reader forms a header for the new message by extracting necessary information from the article to which the user is forming a reply.

The news reader then invokes a word processor that allows the user to compose the reply.

Moderated Newsgroups 

Many newsgroups permit anyone to submit an article.
In such groups, people who submit articles range from novices to experts.
More important, they range from scholars seriously interested in a topic to jokers who merely poke fun at a discussion.

To limit disruptions and compensate for differences in background, some newsgroups are moderated .
In essence, a moderator agrees to preview all articles submitted to the newsgroup.
The moderator determines whether each article is appropriate, and can choose to submit the article as received, edit the article, select and submit parts of the article, or summarize several articles.
If a moderator does the job well, a newsgroup does not contain irrelevant, misleading, or disruptive comments.

Size Of Network News 

Netnews has become extremely popular.
By early 1994 it included over 6600 separate newsgroups divided into over 171 categories.
Many of the categories belong to individual organizations, and do not represent worldwide distribution.
However, thousands of newsgroups are distributed worldwide.

The daily volume of data provides another way to measure network news.
As users join the Internet and more newsgroups appear, traffic continues to increase.

Currently, the total size of news articles received each day exceeds 20 million characters.
The consequence should be clear: 

Because netnews contains thousands of newsgroups and the articles submitted to them each day often exceed 20 million characters, no individual can participate in all newsgroups.

How Network News Works 

The network news system attempts to optimize communication by transferring each news article once instead of fetching it on demand.
To understand how the optimization works, imagine what would happen if the system obtained a copy of an article each time a user wanted to read the article.
Because many users at a given location read the same article, the software would transfer many copies across the Internet.
For example, if 100 people in England each requested an article that was stored on a computer in the US, their computers would each transfer a copy of the article across the Internet.
The problem is significant because more than a million people read network news each day.

To avoid transferring multiple copies of each netnews article across the Internet, administrators responsible for netnews arrange the system so it distributes a copy of each new article to all sites.
When a user at a given site reads netnews, the software retrieves articles from the local copy.
For example, suppose companies X and Y both participate in netnews, and suppose company Y receives its newsfeed from X.
Each night a computer at Y transfers a copy of all new articles to a computer at X.
When someone at company X reads netnews, the news reader obtains articles from a local computer at company X; when someone at company Y reads netnews, the news reader obtains articles from a local computer at company Y.

Once a system administrator has configured network news software, transfer of news articles happens automatically without human intervention.
A news transfer program starts at a scheduled time, and uses the network to contact one or more other sites as specified in its configuration.
During each contact, it transfers new articles.
Thus, new articles can appear in newsgroups without anyone running news transfer software manually.

Redundant Newsfeeds And Duplicate Elimination 

Although transferring a copy of each new article once requires less network traffic than fetching articles on demand, using a single transfer introduces a potential problem: if hardware or software fails, one or more sites will not receive all new articles.
To avoid losing articles during failures, some sites have a backup newsfeed .
A site can receive news articles from either the primary or backup newsfeed.

Although a backup newsfeed guarantees that a site will receive new articles when its primary newsfeed does not operate, the site will receive two copies of each article when both feeds are working.
To avoid storing multiple copies of an article, the netnews software automatically eliminates duplicates.
Duplicate elimination requires two steps: 

Whenever a user creates a news article and submits it, the news software inserts a line in the header that identifies the article.
For example, news software can number outgoing articles: 1, 2, 3, and so on.

Whenever a computer receives an article, the news software compares the identification line in the header to the identification line in the headers of previously received articles.
If it finds a match, the software discards the duplicate copy.

To summarize:

To guarantee that it receives a copy of all netnews articles despite temporary network failures, a given site can have multiple newsfeeds.
Users only encounter one copy of each article because the software automatically detects duplicates and stores only a single copy of each.

More advanced versions of network news software can negotiate which articles to send across a newsfeed.

Negotiating which articles should be sent saves time because the negotiation requires little time compared to the time required to transfer an article.
To negotiate, the network news software at two sites exchange messages that advertise which articles each site has and which each needs.
A site can advertise: I HAVE followed by a list of article identifiers.
The other site examines the list to determine which articles it already has and which it needs and then replies: PLEASE SEND followed by a list of requested articles.
The software then sends only the requested articles.

Relationship Between Netnews And Electronic Mail 

The relationship between network news and electronic mail is more than accidental.
Developers of network news decided to use electronic mail messages for news articles because it provided an easy way to integrate the two services.
A person can use electronic mail to send an article to a newsgroup.
When a user saves a copy of an articles from a newsgroup, the saved copy has the same format as an electronic mail message.
Thus, one can use the same software to manipulate either a copy of a news article or a copy of an electronic mail message.

The most important consequence of using the same message format for news articles and e-mail arises from automatic conversion: a computer program can transfer a memo from an electronic mailing list to a newsgroup and vice versa.

To understand why transfer is important, recall from Chapter 18 that the Internet contains many public mailing lists.
A computer with a public mailing list can be programmed to automatically forward a copy of each mail message to a network newsgroup.
Thus, whenever someone sends a message to the mailing list, everyone reading the newsgroup receives a copy.
People can choose to either read a newsgroup or have their name added to its mailing list.

Impact And Significance Of Network News And Mailing Lists 

The impact of bulletin boards and public mailing lists is difficult to appreciate.
Internet technologies enable over a million people to participate in an electronic discussion.
With that many people involved, it is difficult to imagine the diversity of topics that arise.

More important, new discussions begin rapidly; a group discussing one topic can quickly shift interest to another.
Many people complain that public mailing lists and newsgroups appear so quickly that they cannot possibly participate in all discussions that interest them.

Internet electronic mailing lists and bulletin board services have an interesting social effect: they provide an opportunity for people around the world to exchange views.
In the past, such interactions have been limited either to people who live close enough so they can meet and talk face-to-face (e.g., a backyard discussion among neighbors), or to a few individuals who write opinions columns and editorials that appear in newspapers and magazines.
Interestingly, because the Internet crosses geographic and political boundaries, it can extend discussion to a diverse set of people from many countries.

Identifiable communities develop on the Internet in exactly the same way social groups form among people in a geographic area.
People discover others with common interests.
Sometimes, they find others who agree with their views.
Often, when a discussion diverges or strong opinions form, a newsgroup or mailing list splits in two, allowing the readership of each to forrn a community that shares an outlook.

Of course, interactions using network news or electronic mail differ from usual interactions.
First, because memos and articles must be written, a contributor cannot use tone of voice or gestures to express emotion.
Second, because the Internet can distribute memos or articles quickly, the discussion of a particular topic sometimes ends after a few days.
Third, because electronic mailing lists and network news disseminate each memo or article to many people, almost any statement causes someone to respond.

To gain an appreciation of the diverse topics covered by electronic discussions, one needs to examine typical newsgroups.
Appendix I on page 267 contains a sample of newsgroups that existed in 1994.
It is not a catalog because such a catalog would be out of date before it was published.
Instead, the sample provides examples of the diversity and richness that characterizes network news.

The descriptions have been taken from Internet archives; some are serious and some lighthearted.
For example, the description for newsgroup alt.comics.superman says No one knows it is also alt.clark.kent .
Although no newsgroup exists for Clark Kent, the description is a joke that assumes every user will remember the fictional comic book hero well enough that no further explanation is needed.

The examples are not meant to be comprehensive, nor can one deduce anything about the size or activity of a given group from the specific instances selected.
These are not necessarily the best, most popular, or most widely distributed newsgroups.
For example, the list contains examples of newsgroups that discuss activities in an individual city or an individual country.
One cannot conclude that the city or country only has the specific newsgroup mentioned because most newsgroups for each city or country have been omitted for the sake of brevity.

Neither can one conclude that all cities have equivalent newsgroups; some cities have many and some cities have none.

Hints And Conventions For Participating In Discussions 

Members of a society follow rules of etiquette to keep social interactions civil and to distinguish normal behavior from insults.
Learning proper etiquette for Internet communication can be difficult for two reasons.

First, because the Internet spans many cultures, economic backgrounds, and levels of education, it is much more likely that two people who communicate will not share a common background.
Second, because the Internet is a relatively new communication medium, some people mistakenly assume that no rules of etiquette apply.

Indeed, it seems that some subscribers do not adhere to the normal rules of courteous discussion.

Differences in background often become apparent in subtle ways.
In some cultures, one is taught to trust what others say; in others exaggeration is accepted.

Similarly, cultures do not all share the same amount of respect for a given position, rank, or title.
In fact, a title in one culture or field of expertise may not be meaningful in another.
A few simple guidelines help compensate for such differences: [5] 

When reading an electronic memo or news article, do not make assumptions about the person who wrote it.
The writer may have more or less experience than you.
The writer may have more or less expertise on a given topic than you.
In short, assume neither that the writer is an expert nor a fool.

Suspect any message that appears to have been submitted by a famous person or well-known authority - the header in an electronic message can be forged, and some people seem to derive pleasure from forging them.

When composing a submission, remember that it will be read by people whose backgrounds differ from yours.

Choose words that accurately express your opinion.

Provide evidence for your opinions if you have some available (e.g., a reference to a book or magazine article).

As in any social interaction, use constraint.
For example, before responding to a provocative or outrageous statement, take time to think.

Do not take insults personally, especially when they respond to a memo you wrote.
Remember that the writer does not know you and may not respect your title or position.

Use the symbol for a smiley face, :-), to inform the reader that you mean something in a humorous way.

Many Internet users follow the convention regarding upper and lower case: anything written in all uppercase is assumed to express screaming.

If you are a novice, start by asking for help.
In particular, some public mailing lists and newsgroups maintain a file of Frequently Asked Questions (FAQ) and answers; others maintain a summary of past discussion topics.
You can submit a message that asks whether a FAQ or summary of the discussion is available online.

Summary 

The major bulletin board service available on the Internet is known as Network News.
News reader software allows a person to read messages that have been posted to a newsgroup or to compose and send a message to the group.
The underlying mechanism makes a copy of each article available to everyone who participates in the newsgroup.

Netnews consists of thousands of individual bulletin boards on topics as diverse as education, hobbies, politics, science, entertainment, and employment opportunities.
Although many newsgroups are distributed worldwide, some are restricted to a particular organization, city, country, or continent.

Network news is particularly useful because it has been integrated with electronic mail.
Both netnews and electronic mail use the same format for memos.

Furthermore, many electronic mailing lists and network newsgroups have been connected; a computer program automatically forwards each new article that appears in the newsgroup to the mailing list, and each new message from the mailing list to the newsgroup.

[1] Although newsgroup names resemble computer names described in Chapter 16 and IP addresses described in Chapter 11, they are completely unrelated to either.

[2] The current version of network news software is labeled C: versions known as A news and B news are generally obsolete.

[3] The examples in this book show the format used by the rn (readnews) software; other news readers may use a different format.

[4] Some news readers require the user to press the enter key, the page down key, or a function key to move to the next screenful.

[5] The author compiled this particular list of suggestions from experience: apparently, a similar list of suggestions entitled Netiquette has been posted to some newsgroups.

Remote Login (TELNET) 

Introduction 

Previous chapters describe Internet services used to transfer electronic mail, news articles, or files among computers.
In each case, the information being transferred remains static - it must be prepared and stored on one computer before being transferred to others.

This chapter begins a discussion of services that provide dynamic interactions between a user at one location and a computer at another.
It considers an important Internet service that permits a user to run programs on a remote computer.
Succeeding chapters extend the idea of remote program execution to show how the Internet can provide a variety of interactive services.

The Internet's remote login service is an extension of the login facility used on a conventional timesharing computer.
Thus, to understand remote login, one must first understand conventional login.
The next sections provide the necessary background.
They review how a large timesharing computer operates and discuss why such a system requires login.
Later sections describe how the Internet's remote login service extends the idea to a&rcub;low login on a remote computer.

Users Access A Timesharing System Through Terminals 

Unlike a small personal computer that is usually dedicated to a single individual, a large computer system allows many people to use the computer simultaneously.
To support multiple users, a large computer needs sophisticated software known as a timesharing system .
An individual user usually interacts with a timesharing computer through a terminal that includes a keyboard, display, and possibly a mouse.
Multiple terminals attach to a timesharing computer, allowing one user at each terminal to interact with the computer.
The timesharing software switches the computer among the users quickly to ensure that each user's computation proceeds.

From an individual,s point of view, a timesharing computer appears to operate the same as a personal computer - the software gives each user the illusion of an independent computer.
A user can choose an application program and decide when to run it.
For example, one user can run a spreadsheet application while another runs a word processor.
The timesharing system partitions the computer,s memory into separate parts, and devotes one part to each user.
In addition, the timesharing system allocates each user disk space that can be used to save files.
Like a personal computer, a timesharing system appears to respond to input instantly.
For example, the timesharing system displays characters or moves the cursor as fast as a user presses keys or moves a mouse.

In fact, many timesharing systems operate so efficiently that a user does not usually know whether other users are working on the same computer unless they attempt to use a shared resource simultaneously (e.g., when two users attempt to use a printer at the same time, one of them must wait until the other finishes printing).

A Timesharing System Requires Accounting Information 

Because multiple users can interact with a timesharing computer, the system requires each user to identify themselves for accounting purposes.
For example, a timesharing system permits all users to store files on disk.
To protect files from unauthorized access and to account for storage, the system keeps ownership information with each file.
Whenever a user attempts to access a file, the system verifies that the user has permission to access the file (e.g., the user owns the file).
The system also keeps a record of the disk space each user allocates to prevent a single user from allocating all the space.

Before an individual can use the timesharing system, he or she must be assigned an account.
The account has a unique name called a login identifier that the system uses to identify the user.
In addition, each user is assigned a password that the user must keep secret to prevent others from accessing their account.
Whenever a user begins interacting with a timesharing computer, the system software requests their login identifier and password.

Computer professionals refer to the procedure as logging in or login .

For example, a computer might print the following on the display: login: .

After a user has entered their login identifier, the system prints another prompt that requests them to enter their secret password: password: .

To help keep passwords secure, the timesharing system turns off character display while the user enters a password.
Thus, although the computer accepts the password as the user types it, nothing appears on the screen.
After successfully logging into a timesharing system, a user can enter commands or invoke application programs.
When a user finishes using a timesharing computer, he or she informs the system by logging out .
After a user logs out, the system displays the login prompt on the terminal and waits for another user to log in.
To summarize: 

A timesharing computer system permits multiple users to run programs simultaneously.
Each user is assigned a login identifier and secret password; a user must enter the login identifier and password to use a terminal connected to the timesharing computer.

Remote Login Resembles Conventional Login 

The Internet remote login service allows a user to log into a remote timesharing computer system as if the user,s keyboard and display attach directly to the remote computer.
To use the login service, a user invokes an application program on the local computer and specifies the name of a remote computer.
The local application program uses the Internet to make a connection to the remote computer.
Once a connection has been established, the remote computer takes over the user's display, and issues the login prompt exactly as it does on any terminal that connects directly to it.
After the user enters a correct login identifier, the remote system prompts for the user's password.
The remote computer turns off character display while the user types a password exactly as it does on a conventional terminal.

Remote Login Provides General Access 

After a user enters a valid login, the remote computer permits the user to interact by typing on the keyboard or using the mouse.
The user can run any command or invoke any application program that he or she could run from a conventional terminal on the timesharing system.
In essence, a timesharing computer accessed by remote login reacts exactly the same way it does when a user enters the same input on one of its terminals.

After a user finishes using the remote machine, he or she logs out as usual.
When a user logs out, the remote computer breaks the Internet connection, the local remote login program exits, and control of the keyboard and display return to the user's local computer.

Generality Makes Remote Login Powerful 

The power of remote login arises because it provides general access to the programs on a computer without requiring modifications to the programs themselves.
Once remote login software has been installed, users can run conventional applications from remote locations.
An example will help clarify the idea.

Consider a hypothetical company that uses a database to store information about the company,s products, prices, and current inventory.
Assume that the database software runs on a conventional timesharing computer, and that the company,s sales personnel use the database to determine product prices and availability.

Suppose the company decides to make the information from the database accessible to potential customers through the Internet.
Unfortunately, the database software is not designed to use the Internet or to be accessed from a remote location.
More important, because the company invested money acquiring the existing database system and training employees to use it, they cannot afford to replace the database with new software that has been designed to work with the Internet.

Remote login solves the company,s problem easily.
The company adds remote login software to the timesharing computer without changing the database software.
The company then issues accounts and passwords to remote users so they can log in and access the database.
The company can choose, for example, to create a single public account that provides access to the database system.
Alternatively, the company can choose to issue each customer a separate account to simplify access control.

Remote Login Accommodates Multiple Types Of Computers 

The Internet's remote login service solves an important problem: it permits arbitrary brands of computers to communicate.
For example, suppose a company,s database software only works on computers manufactured by IBM Corporation, and suppose that sales personnel who needed to access the database use computers manufactured by other vendors including Apple Corporation.
Remote login software permits an employee using an Apple computer to contact an IBM computer and run the database software.

To summarize: 

A remote login service allows a user at one site to interact with application programs that run on a computer at another site.
The power of remote login arises because it allows remote access to application programs without requiring any changes to the programs themselves.

How Remote Login Works 

Remote login follows the client-server paradigm discussed in Chapter 15 .
When a user on a local computer decides to log into a remote system, the user invokes a local application program for the remote login service, and enters the name of a remote computer to contact.
The application becomes a client that uses TCP/IP to connect across the Internet to a server on the remote computer.
The server sends exactly the same login prompt used for conventional terminals.
Figure 21.1 illustrates the idea.

Figure 21.1

Remote login across the Internet uses two programs.

The user invokes an application on the local computer.
The local application connects the user's keyboard and display to the remote timesharing system.

Once a connection has been established between the client and server, the software allows the user to interact directly with the remote computer.
When the user presses a key on the keyboard or moves the mouse, the client application sends the data across the connection to the remote machine.
When the application program on the remote computer produces output, the server sends it back to the client.

After a user logs out of the remote computer, control of the keyboard and display return to the local computer.
In practice, when a user logs out of the remote machine, the server on the remote computer terminates the Internet connection.
When the client program is informed of the termination, it exits and control of the local machine returns to the underlying command interpreter or desktop the local machine uses.

Escaping From Remote Login 

Although a remote login client usually passes each keystroke to the remote computer, client software provides a way for a user to escape and communicate with the local client.
To understand why such a facility is needed, one must understand two facts:

1.
During remote login, two programs run simultaneously - the application on the remote computer and the remote login client on the local computer.

2 One of the keys on the keyboard can be used to abort a running program.

Aborting a program is not a normal activity.
However, if an application misbehaves or freezes, it may be necessary to abort it and regain control.
Normally, a remote login client sends all keystrokes to the remote computer.
Thus, when a user presses the special key used to abort a program, the client sends it to the application running on the remote system.
However, the user may also need to abort the local client program.
To do so, the user must enter a sequence of two keys: one key that "escapes" from the remote application followed by the abort key [1] .
In essence, the escape key means, "Please stop communication with the remote system, and allow communication with the local client program.

Displays And Windows 

In most cases, when a user runs a remote login application, the application takes over the entire display.
On a computer system that has a window system, however, a remote login client can use a separate, rectangular region of the screen called a window .
From the remote system's point of view, the window used by a client acts as a single terminal.
Any output that the remote computer emits appears in the window, and the remote computer receives input typed on the keyboard when the window is active.

Thus, remote login from a window operates exactly as if the window is a small terminal screen.

Internet Remote Login Is Called TELNET 

The Internet standard for remote login service is found in a protocol known as TELNET ; its specification is part of the TCP/IP documentation.
The TELNET protocol specifies exactly how a remote login client and a remote login server interact.
The standard specifies, for example, how the client contacts the server, how the client encodes keystrokes for transmission to the server, and how the server encodes output for transmission to the client.

Because both the TELNET client and server programs adhere to the same specification, they agree on communication details.
For example, although most computers interpret one of the keys on a keyboard as a request to abort the running program, not all computer systems use the same key.
Some computers use a key labeled ATTN , while others use a key labeled DEL.
TELNET specifies the sequence of bits a client uses to represent an abort key.

When a user presses the abort key on a local keyboard, the TELNET client program translates the key into the special sequence.
Thus, TELNET allows a user to press the same key to abort a remote program as they press to abort a local one, even if the local and remote computers usually require different keys.

Using TELNET To Access Other Internet Services 

To understand why TELNET is especially popular on the Internet, consider how an organization can use TELNET to provide Internet access.
Assume that the organization has a timesharing computer connected to the Internet as well as many other computers on workers' desks.
The organization obtains one copy of the software needed to access Internet services, and places the copy on the timesharing computer.
To use the Internet, a worker in the organization runs TELNET software to connect to the timesharing computer, and then runs software that accesses Internet services.
That is, a worker always uses TELNET to reach a computer inside the organization, and then runs software that uses the Internet to reach a remote computer.

From a user's point of view, using TELNET to connect to a local computer before accessing the Internet introduces extra overhead.
From the organization's point of view, the strategy can save time and expense.
Keeping a single copy of each Internet access program simplifies the task of acquiring and maintaining software because it means the organization only needs to maintain one copy of the software.
Using TELNET to access a timesharing system also eliminates problems with incompatibilities among computers because it means the organization does not need to acquire Internet access software for each type of computer.
Furthermore, a user does not need to acquire a copy of access software before they can use new Internet services - most computers in the organization only need TELNET software that permits them to connect to a timesharing system.
More important, TELNET allows any computer in the organization to access any Internet service from the organization's timesharing computer.
The organization can install a new timesharing computer or new software that provides access to additional services without changing the TELNET software on the users' personal computers.

Assessment Of Remote Login 

The Internet remote login service is significant for three reasons.
First, remote login is fundamentally different than services discussed earlier because it allows a user to interact with a program that runs on a remote computer.
Instead of sending a data file or a message from one computer to another, remote login allows a program running on a remote computer to accept input, react to it, and send output back to a user on a distant computer.
Second, remote login is significant because of its generality.
After a user logs into a remote computer, the user can execute any application program available on that computer.
In particular, although a given program may run on one brand of computer, remote login permits users on other brands of computers to use it.

Third, remote login is significant because many people use it.
For example, users who have small personal computers or workstations on their desks often rely on remote login for much of their work.
They create a window for remote login, and connect to a large timesharing system.
They leave the window on the screen and move to it whenever they need to perform a significant or specialized computation.
Indeed, many users do the majority of their computing via remote login; computers and networks operate so quickly that one cannot perceive differences between local and remote computations.

Summary 

A remote login facility permits a user who is using one computer to interact with a program on another computer.

The service extends the login concept used by conventional timesharing computer systems to permit access to a remote timesharing system.

The Internet's remote login service is called TELNET .
To use the service, one must invoke a local application program and specify a remote machine.

The local program becomes a client, which forms a connection to a server on the remote computer.
The client passes keystrokes and mouse movements to the remote machine, and displays output from the remote machine on the user's display screen.

Remote login is significant because it shows how the Internet can provide interactive services.
Unlike services described in previous chapters, remote login does not merely transfer static data.
Instead, remote login permits a user to interact with a program that runs on a remote computer.
The remote program can respond to input from the user, and the user can respond to output the remote program displays.

[1] Although the key labeled ESCAPE was originally intended to be used as described here, so many programs use ESCAPE for other purposes that Internet remote login programs use CONTROL- &rsqb; as an escape key.

Advanced Browsing (WWW, Mosaic)

Introduction 

The previous chapter introduces information browsing and discusses a simple browsing service in which menu items consist of textual descriptions.
This chapter extends the concept of interactive information browsing, and describes an advanced browsing service.
It shows how a single service can provide uniform access to many sources of information, how a browsing service can display graphic images as well as text, and how menu items can be integrated with information.

Description Of Functionality

- Locate and access information on remote computers interactively.
- Display text, graphics, or photographic images from a remote computer.
- Play sounds or display videos from recordings stored on a remote computer.
- Access information from several Internet browsing and retrieval services using a single, uniform mechanism. 


Menus Can Be Embedded In Text

The gopher system discussed in the previous chapter keeps menus separate from information.
While a user is running a gopher client program, the display either contains a menu of items that the user can select or it contains information that the user can read.
In essence, a user browses through menus until discovering information of interest.
When a user selects information, the menu disappears from the screen and a document replaces it.

Similarly, when a user finishes viewing the information and chooses to browse again, the menu reappears and replaces the document.

A browsing service that keeps menu items separate from other information makes it easy to recognize the type of display; there is seldom any ambiguity about whether the screen contains a menu or other information.
However, such browsing services often limit a menu item to a short phrase that can fit on a single line of text.
Thus, a given menu item can be difficult to understand because it does not provide much detail.
For example, a short menu item does not include descriptive prose, pictures, or other information.

Advanced browsing services take a fundamentally different approach.
Instead of separating menus from other information, they embed menu items directly in the text.

Embedded menu items can make selection easier because the surrounding prose gives context to an item.
To understand integration, consider the following example paragraph which is shown as it might appear when displayed by a browsing system that provides embedded menu items.

The New York Stock Exchange is a world-renown center of business activity.
Located on Wall Street in downtown New York City, the stock exchange allows stock brokers to buy or sell shares of stock .
At the end of each day, the average price per share of stock as well as the total number of shares traded are computed and used as a measure of activity.
Many newspapers list the closing stock prices each day in their business section.

The example contains a short narrative about the stock exchange in New York City.
It provides facts such as the location of the exchange, and has been written to inform the reader.
In addition to the narrative, the paragraph contains several terms that have been highlighted with an underscore.
The highlighted terms are items that a reader can select, analogous to menu items in a menu-oriented browser.

When the browsing service displays a paragraph, the user can choose to read all the information or scan for highlighted terms.
A user who already knows basic information about the topic and is searching for details can choose to look at highlighted terms; he or she only needs to read the surrounding text when the meaning of a term is not clear.

Because highlighted terms catch a reader's eye, looking at embedded terms can be as fast and easy as looking through a menu.
For example, one can scan the previous page in this book and locate the highlighted terms in a few seconds; it is not necessary to read the entire text.

Once a user selects a highlighted term, an advanced information browsing service responds similar to the way gopher responds to a menu selection.
For example, if a user selects the item average price per share , the browsing service displays information related to the average cost of shares of stock.
If a user selects the item labeled Wall Street , the browsing service displays details about Wall Street in New York City.

The Importance Of Integrated Menus 

Although the example paragraph is small, it illustrates that menu items can be embedded in other information.
An integrated menu system helps a user in two ways.

First, displaying information and menu items on the screen simultaneously explains a topic in more detail and makes it easier to understand highlighted items.
Often, for example, the context around a menu item helps clarify its purpose and eliminates ambiguities.

Second, having menu items embedded in information encourages a user to explore items as they are encountered.
The browsing service helps further because it remembers where a user was reading when an item was selected, so the browser can return to the same place after the user finishes reading about the item.

One way to think about using an integrated browsing service is to imagine reading a book.
A reader who reaches an unknown word or phrase can stop reading and consult a dictionary.
If the dictionary's definition contains additional terms that the reader does not understand, the search may continue further.
Eventually, after mastering the terminology, the reader returns to the book and continues reading.
An information browsing service that embeds menu selections in information encourages the same behavior - a user can begin to examine a document, pause to obtain information about an embedded item, and then return to the original document.

In summary, 

Advanced browsing services can embed menu items in other information, eliminating ambiguities and making it easier to understand each item.
In addition, combining menu items with information encourages a user to explore items when they are encountered.

Menus Embedded In Text Are Called Hypertext 

The concept of embedding selectable menu items in text is called hypertext .
Hypertext did not originate with Internet browsing services - it has been used with conventional computer programs for several years.
For example, one computer manufacturer uses a hypertext system to display documents that describe how to use the computer and the programs it contains.
A user begins by asking the system to display a document that describes the computer.
The user can read the display like an ordinary piece of prose, or can select any term in the document.
When a user selects a word or phrase, the hypertext software looks up the term and displays information related to it.

To understand hypertext documents stored in a computer system, imagine a set of paper documents laid on a desktop with the items in each document that refer to other documents highlighted.
The diagram in Figure 23.1 shows an example of six documents with references to other documents indicated by arrows.

Figure 23.1

An illustration of six documents with text obscured except for the title and references to other documents.

An arrow has been drawn between a word or phrase and the document it references.

In the figure, the document labeled Wall Street contains two references: one to New York City and another to Stock Exchange .
The reference labeled New York City points to a document titled New York, NY, which contains a reference to the financial district .

When viewed as a collection of documents two points become clear: 

A reference does not need to be the same as the title of the document to which it refers.
For example, although the document that has title Stock Prices contains a reference to the Exchange , the document to which it refers has the title Stock Exchange .
The designers of a hypertext document specify the connection between each item and the document to which it refers.

Not all documents contain the same number of references.

A document can contain many references or only a few.

Of course, when using a hypertext system, a user does not see a graphic illustration of the links between documents.
Instead, one document appears on the screen at a time, and the user must follow a reference to determine where it leads.

In summary, 

Although documents in a hypertext system can contain a complex maze of references, the complexity may not be obvious to a user who can view only one document at a time.

The power of hypertext arises from its combination of generality and instant reference - each document can contain text or embedded menu items that point to other documents.
A user can choose to read an entire document, stop at any time to select a word that leads to a new document, or return to a previous document and continue reading.
Because a conventional hypertext system keeps documents in a single computer, hypertext software can follow a reference from one document to another instantly.

Some Computers Have Multimedia Capabilities 

To understand how Internet browsing services extend hypertext, it is necessary to understand computer hardware.
Although early computers could only display output using typewriter-like characters that each occupy the same width, most modern computers have sophisticated hardware that can display graphic images or play sounds.

Such computers use the graphics hardware to display text using proportional spacing - the space allocated for each character is proportional to the character's width [1] .
Using advanced technology, modern computers can also display multiple colors, geometric shapes or diagrams, and still or moving pictures.
In addition, sophisticated computers can emit audio and reproduce the sound of human speech or music.
A computer capable of playing audio and displaying video has multiple media output; such computers are often called multimedia computers.

Video And Audio References Can Be Embedded In Text 

Multimedia computers make it possible to access additional forms of information.
For example, consider the following paragraph.

Several city tours include visits to the New York Stock Exchange.
During a typical working day, many people crowd onto the floor of the exchange.

Visitors can hear the sounds of traders bidding and view the sights of trading activity recorded by cameras that look down on the scene.

The paragraph describes a day at the New York Stock Exchange and the activity that a visitor can encounter.

As in the earlier examples, phrases that can be selected are highlighted by an underscore.
Unlike earlier examples, however, some highlighted phrases do not correspond to textual information.
Instead "view the sights,, and "hear the sounds" refer to available video and audio information.

When a hypertext system contains references to nontextual information, it is called a hypermedia system.
Figure 23.2 illustrates the conceptual organization of a hypermedia document that contains references to nontextual information.

Figure 23.2

The conceptual organization of a hypermedia document.

When a user selects hear the sounds, the computer plays stored audio.
When a user selects view the sights, the computer displays the stored images.

Inside a computer, nontextual data must be stored in digital form.
For example, a computer stores sound as a sequence of numbers, similar to the way music is stored on a compact disc.
A computer also uses numbers to store graphics or other video images.
A user who plays the audio or displays the video never sees the underlying sequence of numbers.

To summarize: 

A hypermedia system can embed references to nontextual information as well as references to textual information in a document.
If the user selects a reference to a document, the hypermedia system displays the document; if the user selects a nontextual reference, the hypermedia system plays the audio or displays the images.

The World Wide Web 

The Internet offers an advanced browsing service that extends the concept of hypermedia to include many computers.
Known as the World Wide Web [2] (WWW) , the service is a mechanism that links together information stored on many computers.
In essence, WWW allows the references in a document on one computer to refer to textual or nontextual information stored in other computers.
For example, a World Wide Web document on a computer in the United States can contain a reference to a stored video image on a computer in Switzerland.

A user browses the World Wide Web in the same way that one browses hypermedia documents on a single computer.
At any time, the user's display shows a document that contains highlighted references.
When the user selects an item, the system follows the reference, obtains the referenced item, and either plays the sound or displays the document.
Thus, a user can browse through the World Wide Web without knowing where information resides.

Although it can be difficult to understand how a hypermedia service works, its ability to present information visually makes it appealing.
As a result, the World Wide Web has become an incredibly popular Internet service [3] .
In summary, 

In addition to displaying textual information, an advanced Internet browsing service can play sounds and display images.
To display nontextual information, a computer must have multimedia hardware.

Mosaic Software Used To Access WWW 

Although software exists to allow WWW access from a character-oriented terminal, such software cannot display images or play sounds.
Instead, such software displays text in a typewriter-like font, and inserts &lsqb;IMAGE&rsqb; each place a graphic image should appear.
Most users who access WWW choose software built at the National Center for Supercomputer Applications (NCSA) that can display audio, video, text, and graphics.
Called Mosaic , the software controls the user's display and permits the user to browse multimedia information using a mouse.

When a document appears on the screen, Mosaic highlights the embedded menu items.
To select an item, a user moves the mouse until the cursor has been positioned over the item, and presses the mouse button to request Mosaic to follow the reference.
If the item refers to a prerecorded sound, Mosaic plays the sound.
If the item refers to a drawing or photograph, Mosaic displays the graphic on the user's screen.
If the item refers to a video of a moving image, Mosaic can retrieve the video and display it like a television picture.

More important, Mosaic does not restrict documents to text.
It permits references to be embedded in graphic images.
For example, Mosaic can display information that includes graphics as well as text, and allows the user to make a selection from highlighted text or parts of the graphic design.
In short, 

The Mosaic program provides access to the World Wide Web.
Mosaic can display a hypermedia document, and allows the user to select items with a mouse.

An Example Hypermedia Display

A simple example will illustrate how Mosaic appears to a user.
Assume that a user is exploring the World Wide Web and reaches the information for a company called the Hypothetical Rocker Company .
Figure 23.3 illustrates how the Hypothetical Rocker Company's WWW entry might appear when displayed by Mosaic.

As the example shows, Mosaic divides the screen into three areas: a section at the top is used to identify the entry, a series of rectangles across the bottom each contain the name of an operation that a user can perform, and a large region in the center of the screen is used to display information.
The example information illustrates two ideas about the Mosaic interface.
First, a company can arrange its WWW entry to display text in various sizes and styles along with graphic images.
In particular, some words have been italicized and others appear in boldface.
Second, an embedded menu item can refer to information outside the company.
In the example, the highlighted phrase The Bakery refers to an establishment located across the street from the Hypothetical Rocker Company.
Presumably, The Bakery has either agreed to provide a reference to the Hypothetical Rocker Company in its WWW entry or has paid the Hypothetical Rocker Company a fee for advertising.

Figure 23.3

A hypothetical example of WWW information displayed by Mosaic.

Highlighted text or graphic symbols can be used as menu selections.

The example in Figure 23.3 shows one possible visual effect produced by a WWW page that intermixes multiple text sizes and styles as well as graphics.
The variety of presentation and lack of uniformity gives the information a cluttered appearance and makes it difficult to read.

WWW pages do not need to be complicated or cluttered.

Indeed, the best entries organize information and present it simply.
For example, consider the item labeled Types of rocking chairs .
The Hypothetical Rocker Company has stored information describing its rockers.
For each rocker, the information could be a picture, audio sounds, or a document similar to the one shown.
If a user selects Types of rocking chairs , Mosaic will retrieve and display the associated information.
For example, Figure 23.4 shows one possible way to organize the available information as a simple list.

Recording The Location Of Information 

Suppose you have been using Mosaic to wander through the World Wide Web, and happen to reach the page of information shown in Figure 23.4.
You might want to tell a friend about the page or record its location so that you could return to it later.
Because a path through a set of hypermedia documents can be long and complex, it can be difficult to remember the entire series of selections that led to a given page.

To make it possible for an individual to tell others the location of information, the World Wide Web assigns each page of information a unique identifier.
The identifier consists of a string of characters that can be recorded in a computer file, written on a piece of paper, or sent to another person.
Given the identifier, an interface like Mosaic can return to the page of information instantly - the user does not need to search through menus or select items.

An identifier used to specify a particular page of WWW information is called a Uniform Resource Locator (URL) .
When Mosaic displays a page of information, it also displays the URL for the page.
Thus, a user can easily save and remember a URL.
For example, the box near the top of the screen in Figure 23.4 labeled Document URL contains the example URL: [4] http://WWW.hrocker.Com/types 

A URL may seem like a nonsensical collection of letters and punctuation.
However, the precise syntax conveys meaning that computer programs like Mosaic can use to retrieve information.

A Uniform Resource Locator consists of a short character string that identifies a particular multimedia document.
Given a valid URL a program like Mosaic can quickly retrieve the page of information to which it refers.

Figure 23.4

An example display that corresponds to the selection in Figure 23.3 labeled types of Rocking chairs

How The World Wide Web Works 

Like other services, the World Wide Web uses client-server interaction.
A user initiates interaction by invoking the Mosaic program and entering a URL.
The Mosaic program becomes a client that uses the Internet to contact a remote server and obtain a copy of the information referenced by the URL.
The server on the remote system returns a copy of the page to display along with additional information that describes the contents.

The additional information a WWW server returns tells Mosaic two important things.
First, it describes how to display the information.
Second it gives a URL for each item on the page that the user can select.

When Mosaic receives a page from a remote server, it displays the page, and then waits for the user to select one of the highlighted items.
Once a user makes a selection, Mosaic consults the additional information associated with the page to find the URL for the selection.
Mosaic then uses the Internet to obtain the newly selected page of information.
Thus, at any given instant, the Mosaic client is either waiting for the user to select an item, or is contacting a remote server to obtain the information corresponding to the user's selection.
Figure 23.5 illustrates the interaction.

Figure 23.5

When a user selects an item, Mosaic becomes a client that contacts the remote server to obtain a copy of the corresponding page of information.

Mosaic only contacts one remote server at any time.

A URL Tells Mosaic Which Computer To Contact 

How does Mosaic determine which remote computer contains a given page of information?
The URL tells it.

Each URL contains, among other information, the domain name of a remote computer.
In a sense, a URL is like a telephone number - it is a short string that identifies a specific point of contact.
When given a URL, Mosaic extracts the computer's name, and then uses the Internet to contact a server on that computer.

A URL Tells Mosaic Which Server To Contact 

In addition to the name of a remote computer, a URL describes a particular server and a page of information available from that server.
After contacting the server on the remote computer, Mosaic asks the server for a copy of the specified page of information.

Each URL uniquely identifies a page of information by giving the name of a remote computer, a server on that computer, and a specific page of information available from the server.

Composing A Page Of Multimedia Information 

A person who designs a page of multimedia information for the World Wide Web must specify exactly how the page should appear.
For example, the person must specify the style and size of lettering, the items that should be highlighted, the graphics to be included, and the colors to use when displaying each item.
When Mosaic obtains a copy of the information for a page, it produces a form suitable for the computer's display hardware.
For example, if the computer has color capability, Mosaic displays the page using the colors that were specified originally.
If the computer cannot display colors Mosaic shows the page in black and white, using shades of gray in place of colors.
In essence, Mosaic attempts to create a representation that provides the best display on the available hardware.

Mosaic Provides Access To Multiple Services 

In addition to providing access to multimedia documents, the World Wide Web extends Internet browsing services in another significant way: it provides access to multiple services through a single, advanced browsing service.
For example, Mosaic understands how to access information stored in a gopher browsing system or in a file accessible through the FTP file transfer service.

Furthermore, references to such information can be associated with a menu item in a multimedia document.

The key to understanding WWW,s generality lies in realizing that the URL mechanism contains an identifier for a service as well as the name of a computer on which the service operates.
A URL that begins with the string http refers to the WWW service that clients use when they retrieve a hypermedia document.
A URL that begins with the string ftp refers to a file accessible through the FTP service.

People often employ the same technique as WWW to encode a type of service with an address.
For example, a business card often contains strings such as: 

Telephone: 315-555-7895.

Fax: 315-555-7802.

The initial string specifies whether the number can be used to place a voice telephone call or send a FAX.
That is, a prefix like Fax: tells one the exact access mechanism to use.

Conceptually, a user can think of Mosaic as a giant program that has several other client programs built in.

Given a URL, Mosaic examines the part that specifies a service and chooses the appropriate client to access that service.
Figure 25.6 illustrates the concept and explains why the program can be thought of as having a "mosaic" design.

Figure 23.6

Internal organization of the Mosaic program.

A user interacts with a single, uniform interface that uses information in the URL to choose one of the built-in client programs to access information on the Internet.

For example, Mosaic understands the FTP file transfer protocol.
If a URL specifies that a file can be obtained via FTP, Mosaic uses the FTP service to retrieve the file.
From the user's point of view, the selection of an appropriate access mechanism is automatic - the user browses through the World Wide Web making selections to request information.

Mosaic's novelty and power arises because it integrates access to multiple Internet services into a single, seamless browsing system.
Mosaic uses information in the URL to automatically select an access mechanism from among such services as remote login, file transfer, and gopher.

Hotlists And Private WWW Documents 

The URL for a document provides an easy and quick way to locate information.
Like the bookmark system available in gopher, Mosaic provides an easy way to store a URL on disk so it can be used later.
The storage mechanism is known as a hotlist .
Suppose, for example, a user encounters an interesting document while browsing, but does not have time to read it.
The user can record the document's URL on a hotlist, and postpone reading it.
To do so, a user selects the Navigate menu located near the top of the screen, and requests Mosaic to save the URL on the hotlist.
Later, when the user starts Mosaic, the hotlist becomes available and any item on the hotlist can be selected.

WWW is more flexible than gopher because it permits each user to create a private multimedia document that contains references the user has found interesting.
A user's private page of information is known as a homepage ; the term also applies to the main page of information for a particular company.
Technical users often spend much time arranging their homepages to use multiple fonts and contain graphic images.
To share something with a friend or colleague, they simply pass a URL for their homepage, and tell the person which reference to follow.
Given a URL for a user's homepage, Mosaic accesses and displays the homepage; the user can select a reference from a private homepage in the same way they select a reference from any other page of information in WWW.

Getting Started With Mosaic 

Using Mosaic for the first time is not difficult.
When a user runs Mosaic software, Mosaic contacts a WWW server and displays an initial hypermedia document.
If the local site does not have a server, Mosaic usually is programmed to contact a server at the National Center For Supercomputer Applications in Champaign, Illinois.

The user can proceed to investigate the Internet by selecting items on the initial page or using Mosaic commands.
The user can position the cursor over the Navigate menu and press a mouse button to see a list of commands.
Selecting the menu item labeled Internet Starting Points produces a description of interesting and informative documents available on the World Wide Web.

Summary 

Advanced Internet browsing services enhance information access in two significant ways.
First, such services use a technique known as hypertext to integrate menu items and information.
Second, such services allow text, graphics, audio, and video to be combined to form multimedia documents.
The result is known as a hypermedia system in which a given multimedia document can contain references to other multimedia documents.
To display output from a multimedia document, a computer must have hardware that can display images and reproduce sounds.

The World Wide Web of information is an advanced browsing service available on the Internet.
One can think of the WWW as a large set of hypermedia documents stored on computers throughout the Internet.
A given WWW document can contain embedded menu items that refer to WWW documents stored on various other computers.

The most popular software used to access the World Wide Web is named Mosaic.
Mosaic allows a user to browse information using a mouse.
After Mosaic displays a particular multimedia document, the user selects one of the embedded menu items and requests Mosaic to obtain and display the document to which it refers.
Thus, from a user's point of view, the location of information is irrelevant - the World Wide Web appears to be a seamless interconnection of documents each of which can be accessed directly .

To make it possible to record the location of a particular piece of information, each WWW document is assigned a Uniform Resource Locator (URL).
A document's URL is a string of characters that identifies the type of document and its location in the Internet.
Given the URL for a document, Mosaic software can determine the computer on which the document resides, the service on that computer used to access the document, and the location of the specific document.
Because Mosaic can use a variety of mechanisms including gopher and FTP to retrieve documents, it provides a uniform, seamless way to access information on the Internet.

An Observation About Hypermedia Browsing 

Many people find the World Wide Web fascinating.
In only a few minutes, one can learn how to make a selection and move from one page of information to another.
In a short time, novices find that they have examined documents on a myriad of topics located on a variety of computers at Internet sites around the world.
For example, one professor at a midwest university was amazed to find pictures of Hawaii, while a colleague was equally astounded by information on high-energy physics obtained from a site in Europe.

The maze of interconnected WWW documents is neverending.

Because the World Wide Web is growing at an incredible rate, the information that comprises the Web keeps changing, enticing one to browse again.
As a result, browsing WWW can become addictive and time-consuming.

[1] For example, in proportional text, the letter i occupies less width than the letter w.

[2] The World Wide Web was developed to allow physicists around the world to share information.

[3] Between the summers of 1993 and 1994, for example, use of WWW tripled.

[4] Like the company in the example, this URL is hypothetical.

Automated Contents Search (WAIS)

Introduction 

The previous chapter introduces automated searching.
It shows how an automated search service can help a user find information without requiring the user to know the names of remote computers on which the information resides.
The example automated search services considered in the previous chapter, archie and veronica, use titles to search for information.
Archie searches for files names and veronica searches for gopher menu items that contain a specified string.

This chapter considers an alternative approach to automated search services that examines- the contents of a document instead of the document title.
It discusses the motivation for searching contents, and shows how such searches appear to a user.

Names Vs. Contents 

Recall from the previous chapter that automated search services fall into two broad categories.
Services like archie belong in the first category because they use titles as search keys.
When an archie user enters the search string forest , for example, the user is asking archie to, "please find all files with forest in their name".
A service that searches entire documents belongs in the second category.

In such services, a user who enters the search string forest is asking the service, "please find all documents that contain the word forest ".

The advantage of searches that use titles lies in speed.

To understand how using names makes searching proceed quickly, imagine being given several boxes of books, and asked to search for the term flower .
If you are asked to find all books with flower in the title, you must look at the title on each book.
If you are asked to find all books that contain the word flower , you must look at the words in each book until you encounter the word flower or reach the end of the book, a time-consuming task.
The same idea holds for an Internet search service: a search that examines document contents requires significantly more computation than a search that examines titles.

Although searching titles can proceed quickly, the method has a disadvantage.
The disadvantage arises because a document,s title does not always accurately describe the contents.
Consider searching books.
On one hand, words can appear in the title of literature that have little to do with the contents.
For example, the search string cat matches titles like Cat On A flot Tin Roof , a story about personal relationships.
On the other hand, a title may not contain words that do describe the subject.
For example, although Gone With The Wind is a well-known novel about the south during the U.S. Civil War, neither the string south nor the string civil war appears in the title.

In summary, an automated search service that examines titles requires less computation than an automated search service that examines document contents.
Because a document title does not always describe its contents, searches that use titles can report unrelated information or fail to find all information on a topic.

Reading Vs. Scanning 

When a human reads a document, he or she translates words into ideas.
The translation can be quite complex, and involves much more than understanding the meanings of words separately.
The simple statement: 
The warm climate encouraged growth, resulting in food for the entire family, asserts that the weather helped plants grow, and that the resulting crop was used to feed a family.
Although the statement: The economic climate was adequate for growth contains similar words, it has nothing to do with the weather or plants.
(It asserts that the economy was doing well).
Similarly, the question: Do you see what I mean ? does not really have to do with eyesight (it asks if the reader understands what has been stated).

Because computers cannot easily parse language or understand the meaning of a document, most computer programs do not attempt to read documents the way a human does.
Instead, they treat a document as a long list of words, and simply scan for a particular term.
In essence, when given a word, the computer compares it to the words in a document without trying to understand their meaning.

If it finds a match, the computer declares that the document satisfies the request.

Document Scanning Does Not Suffice 

The documents selected by scanning for matching strings can be surprising.
As the examples above show, when scanning for the string climate , a computer can select a document on economics as well as a document on weather.
In addition, scanning can produce other unwanted selections.
For example, suppose the following sentence appears in a document:

This document has absolutely nothing whatsoever to do with a bicycle, India, or fishing.

A human who interprets the meaning of the sentence knows that the document does not pertain to bicycles.
However, if a computer scans the document looking for the string bicycle , it will find a match [1] .
In general, 

Because a computer cannot read and understand a document as easily as humans, most automated search services scan documents for a given word or phrase.
Incorrect selections can result because a document usually contains many words that are irrelevant to its topic.

Automated Document Search Is Not New 

Several years ago, librarians realized that a computer can help find documents on a particular topic.

Researchers have investigated how computers can automate and expedite retrieval in libraries.
Although their work concentrates on document retrieval in a single computer instead of a network of computers, their observations and approaches to the retrieval problem have been used for document retrieval on the Internet.
Researchers have found, for example, that scanning for specific words or phrases does not usually extract the documents pertinent to a topic.
Instead, they use a two-step process:

Ask a user to enter search terms, and then scan all documents to look for the specified terms.
Present the user with a (usually long) list of documents that contain the terms.

Ask the user to examine documents on the list and select a few documents that contain information they desire.

Then, instruct the computer to analyze the words in the sample documents and start searching all documents again to find documents that are "similar".

Because a computer cannot easily understand the meaning of printed language, it does not attempt to read or understand the content of the samples.
Instead, a computer counts the occurrences of words and uses a mathematical formula to evaluate whether two documents are "similar".
In general, if the sample documents that a user selects repeatedly use the same words, the computer will look for additional documents that contain those words.
Although the computer cannot guarantee that mathematically similar documents will contain related information, the idea works well in practice.

To understand how selection proceeds, suppose a user is interested in finding information on antique automobiles.

The user can begin by instructing the computer to: "find documents about automobiles or antiques".

In response, the computer produces a list of all documents that contain the term automobile or antique .
The computer presents the list to the user, and allows the user to browse, either by reading the titles of documents or by obtaining a copy of each individual document.
The user chooses documents that contain information on antique automobiles, and instructs the computer to: "find more documents like these".

The computer analyzes the chosen documents to determine common words and phrases.
For example, the terms carriage, wheel or the phrase classic car might occur in many of the sample documents about antique automobiles.
After extracting a list of common words and phrases, the computer uses the list to search for additional documents that contain the same words.
In general, 

When a user enters a search request, a retrieval system scans for documents that contain the specified words.
The system asks the user to select examples from the list, and searches for additional documents that contain similar words or phrases.

The Wide Area Information Service 

The Internet offers an automated search service that examines document contents.
Called the Wide Area Information Server (WAIS) [2] , the service was invented in a cooperative effort among several companies.
In particular, Thinking Machines Corporation participated because WAIS demonstrates the capabilities of their computers.
Later, an independent company, WAIS Inc., was formed to build and sell WAIS.

Like the document retrieval software on a single computer, WAIS can locate a set of documents that contains a given term or phrase.
Also like a conventional document retrieval system, WAIS permits a user to identify sample documents and uses them to find additional documents that are similar.
In summary, 

WAIS is an automated search service available on the Internet.
Unlike the search services described in previous chapters, WAIS examines document contents.

Despite many similarities, WAIS differs from conventional document retrieval systems in two significant ways.

First, WAIS is accessible via the Internet and can include sets of documents from many computers.
Second, WAIS divides documents into groups to help eliminate irrelevant information.

How WAIS Appears To A User

Like most Internet services, WAIS provides several ways to access the service.
For example, a user can form a TELNET connection to the computer quake.think.com , log in with userid wais , and begin interacting directly with the WAIS service.
Alternatively, a user can run a WAIS client program that forms a connection to a WAIS server and permits a user to interact.
Client software is available for a computer that has a standard keyboard and character-oriented display, as well as a computer that has a mouse and a graphics display.
Finally, a user can access WAIS through the Mosaic program described in Chapter 23.

Although the details of how WAIS appears and how one interacts with the service differ among the various methods of access, they follow the same general pattern.

1.
A user begins by choosing a collection of documents to scan.
WAIS calls each collection a source ; over 500 sources currently exist.

2.
The user enters a question, which consists of a sequence of words.
WAIS responds by finding documents in the specified collection that contain words from the question.

3.
The user selects a few sample documents and asks WAIS to, "find additional documents like these".

A Question Can Be Written in English 

When a WAIS user enters a question, the question can be phrased in English.
For example, in response to the question: Tell me about documents related to France or England .

WAIS will find documents that pertain to France and England.
Despite the appearance, however, WAIS does not understand English.
Instead, it merely extracts individual words from the question and uses them to scan documents in the specified collection.
WAIS ignores common words like to that appear in most documents, and uses words like France that only appear in a few.
In fact, a user can omit unnecessary words and enter only the words to be used in the search: France England .

WAIS does not care whether the sentence makes sense because it does not interpret the meaning.

A User Chooses Among Collections Of Documents 

WAIS divides all documents into collections called sources .
Before entering a question, a user must specify which sources of documents to use for the search.
Limiting a search to specified collections of documents helps WAIS retrieve only documents of interest to the user.
For example, suppose that a user intends to travel to France and wants to search for information regarding travel to foreign countries.
A search using the term France might produce documents on topics as diverse as French literature, the economy in France, or French cuisine.
However, limiting the search to documents from a source that provides travel information helps ensure that the documents retrieved will pertain to travel.

Before asking WAIS to search for documents, a user must decide which document collections to use as sources.
How can a user choose sources?
Incredibly, one uses WAIS to conduct the search! 

Using WAIS to search for sources makes the service somewhat awkward for beginners.
However, the idea is not complex.
When a user first contacts WAIS, the system begins with a special source called a directory of servers that is not a conventional collection of documents.
Instead, it contains descriptions of the document collections available to WAIS.
When a user poses a question using the directory of servers source' the result is a list of document collections.

To search the description of sources, a user enters a sentence or search terms.
WAIS looks through the directory of servers, and lists all pertinent items.
Each item on the list describes one collection of documents.

The user can then select one or more items and specify that WAIS use them for subsequent searches.
The example in the next sections illustrates how a user selects a source, and then searches the source for documents.

Using A Mouse To Access WAIS

Several programs are available that provide a point-and-click interface for WAIS.
Figure 25.1 illustrates how the screen might appear when running such a program.
The software begins by listing the directory of servers source and waiting for the user to enter a question.

Figure 25.1

An illustration of the way WAIS first appears to someone who is using a point-and-click interface.

As the figure shows, WAIS displays a small window that is divided into three areas.
The top area contains questions, the middle area contains a list of sources, and the bottom displays status information.
Each area includes operations (e.g., New and Help ) that the user can select.
The operation labeled Help displays information on how to use WAIS; the operation labeled Quit terminates the program.

Selecting Among Sources 

To request a search, the user moves the mouse to position the cursor over operation New in the Questions section, and presses a mouse button to select the operation.
WAIS displays a second window labeled WAIS New Question that can be used to enter the search information.
Figure 25.2 illustrates the format.

Figure 25.2

The window that appears when a user clicks on the New operation under the Questions section of a WAIS window.

The window contains several areas.
Near the top, a box labeled Tell me about allows the user to enter a sentence or words to be used in the search.

The second section of the window contains two areas, one labeled In Sources and the other labeled Similar to .
The box for sources lists the sources WAIS will consult when the user asks it to search.
The box contains only the name directoly- of-servers.src because the user has not yet selected other sources.

To enter a search string, a user moves the cursor to the box labeled Tell me about types a sentence or a sequence of words, and clicks on the Search command to request that WAIS perform the search.
WAIS consults the directory-of-servers source, and displays the output from the search in the large box labeled results .
For example, suppose a user is interested in information on travel.
The user enters the search key travel to request that WAIS find collections of documents that pertain to travel.

Note that the initial search does not produce documents themselves - the user is using WAIS to find collections of documents.
WAIS responds to the question in a few seconds by filling in fields of the results area as Figure 25.3 shows.

Figure 25.3

An illustration of how WAIS might respond when a user types the request travel to the directory-of-servers source.

The output may seem cryptic.
Each line in the results section corresponds to a collection of documents that has something to do with travel.
A line contains a ranking number that tells how well the collection matches the description, the date that the information was last changed, and a name for the collection.
Although a user may have trouble understanding what each line means, one can guess that the collection labeled: US-State-Department-Travel- Advisories.src corresponds to a source that contains documents issued by the U.S. State Department.
Some of the other lines mention Australia, but the text does not explain the purpose of the sources or the documents found in them.

After WAIS displays the results of an initial search, the user must decide whether to modify the question and search again or to choose among the sources listed.
To do the former, the user repositions the cursor in the box labeled Tell me about , replaces the search key, and clicks on the operation labeled Search .

If a user decides to search for documents within one or more of the sources, the user must select a source.
To do so, the user moves the cursor to a line in the results section that names a source, and clicks to highlight the line.
WAIS changes the selected line to reverse video.
Figure 25.4 shows how the window appears after a user has selected a source.

Figure 25.4

An illustration that shows how a WAIS window appears after a user selects a line in the results section.

After a user highlights a line in the results section, the user can select an operation from the list on the lower left side of the window.
The view operation provides additional information about the highlighted line.
For a source, the information includes details about the computer WAIS must contact to access the source and the amount of money, if any, the owner charges for access.
After a user views information about the source, the user can select the Save operation to store information about the source on disk.

Once a user has selected a source and stored it on disk, WAIS automatically includes the source whenever the user accesses the WAIS service; a user can delete the source if it is not relevant to a search.
In summary,

A WAIS user must select among collections of documents before using WAIS to search.
Although the selection requires several steps, a user can save the information on disk to avoid repeating the selection.

Posing A Question To WAIS 

Using WAIS becomes easier after a user has selected sources and saved them on disk.
Whenever a user invokes WAIS, it automatically retrieves the set of saved sources from the user,s disk and makes them available to use for searches.
For example, suppose a user has chosen to search in the U.S. State Department Travel Advisory collection, created a question window, and entered the search string France or Europe .
Figure 25.5 shows how the screen might appear when WAIS responds to the search.

Figure 25.5

An example of the display a WAIS user encounters when searching for documents within a collection.

WAIS uses the same form of display whether a user searches for sources or for documents within selected sources.

WAIS retrieves the documents that contain words from the search string and displays a list in the results section.

WAIS counts the times the search words occur in each document, and orders the list by decreasing count.
In the example, the first document on the list contains more occurrences of the search words france and europe than any other document on the list.
The point is: 

A user often finds the documents WAIS places at the top of the list most relevant to a search because those documents contain more occurrences of the search words than other documents in the list.

Retrieving A Document With WAIS 

A user can use the mouse to select a line in the results list, and then click on the view operation to view the document.
WAIS retrieves the document and displays it on the screen.
For example, Figure 25.6 shows how the screen appears if a user retrieves the first document from the list shown on the previous page.

Figure 25.6

An illustration of the way WAIS displays a document.

As the figure shows, WAIS divides the output window into two areas.
The text of the document appears in the large, central section of the window, and a small set of operations appears at the bottom of the window.
If a user selects the Save To File operation, WAIS stores a copy of the document on disk.
When a user selects the Done operation, WAIS removes the document from the display and allows the user to view another document.

Only part of a document is visible at any time.
A user can move to other parts in two ways.
As with most window displays, a user can page through the document by pressing a mouse button while the cursor is positioned on the scroll bar at the left side of the window.
In addition, WAIS can locate occurrences of search words.

Whenever one of the search words appears in the document, WAIS highlights the word by displaying it in bold type.

In the example, the terms France and Europe appear highlighted because both are search words.

WAIS provides the operation labeled Find Key to allow a user to move forward in the document to the next occurrence of a search word.
If the next occurrence appears later in the document, WAIS repositions the window so the search word appears on the display.
Thus, when a user selects the Find Key operation, WAIS may skip arbitrary amounts of text before it stops to display information in the window.

How WAIS Works 

Like other Internet services, WAIS uses the client-server approach.
A user invokes client software that contacts a WAIS server when the user requests a search.
Each source corresponds to a specific server.
When a user first encounters a source and saves it on disk for later use, WAIS records the location of the server along with the name of the source.
Whenever the user specifies a source to search, the client software automatically consults the information on disk to determine which server offers that source.

Like the Internet search services discussed in the previous chapter, WAIS does not need to scan all documents in a given collection each time a user enters a question.
Instead, computer programs scan documents, and make lists of all words in each.
When a user poses a question, a server compares the words in the question to the list of words in the document.
Similarly, when a user selects a document and requests WAIS to find other documents that are similar, WAIS can compare the words in the selected document to words in other documents.

Special Computers Make WAIS Efficient 

Extracting words from a document does not guarantee that a computer will search quickly.
Because large documents can contain thousands of different words, searching a collection of documents can take slow computers many seconds.
In most cases, however, WAIS can answer a question quickly.

The secret to quick response lies in the computers chosen to run WAIS.
Instead of small, slow personal computers, WAIS servers usually run on special-purpose computers that are large and fast.
For example, although an average computer contains only one processor, some of the computers used to answer WAIS questions each contain several processors that can all work on questions simultaneously.

Summary 

Automated search services can examine the contents of documents as well as titles.
Most retrieval systems use a two-step process.
In the first step, a user specifies keywords, and the system finds a list of documents that contain the keywords.
In the second step, the user selects documents from the list and requests the system to find additional documents that are similar.
Because searching content requires more computation, such searches take longer than searching titles and require special high-speed computers for efficiency.

The Internet offers a service known as the Wide Area Information Server that can search document content.
WAIS uses the same two-step process as a conventional document retrieval system A user can request WAIS to search for specific words, or can identify a set of documents and request WAIS to find documents that are similar.

WAIS divides all documents into collections called sources.
When a user requests a search, the user must identify one or more collections of documents in which WAIS should search.
Interestingly, a user can use WAIS to identify appropriate collections.
To do so, the user requests a search on a special collection called a directory of servers .
Because information about collections of documents can be saved on disk, a user only needs to find a source once.

[1] Interestingly, a computer scan of this book found bicycle as well as many other terms unrelated to the topic of computer networks, including phonograph, motorcycle, China, planets, and muppets.

[2] The name is slightly misleading; think of WAIS as the Wide Area Information Service instead.

The Global Digital Library 

Introduction 

Previous chapters examine the services available on the Internet and show how each can be useful.
More important, each chapter explains a basic concept such as hypermedia browsing or automated search, and shows how the concept is used in Internet services.

This chapter summarizes the discussion.
It explains the digital library concept, and shows how Internet services provide a global digital library.
In addition, the chapter provides perspective about Internet services, explains how each service can use others, and discusses the changes that can be expected.

A Cornucopia Of Services 

Previous chapters explain many of the basic concepts that provide the foundation for Internet services.
The concepts include menu browsing, used by gopher ; hypermedia browsing, used by the World Wide Web ; automated searching, used by archie, veronica and WAIS ; file transfer, used by STP and memo communication, used by electronic mail and network news .
Although the list of example services seems diverse, it does not include all available Internet facilities or services.
In fact, so many services exist that an individual would need months of effort to learn about all of them [1] .
In summary: 

The Internet contains many services that permit an individual to search for information, transfer information, and interact with other users.
Internet services handle diverse forms of information, including text, sound, graphic images, real-time video, and multimedia combinations.

New Services Appear Regularly

Although many services exist, the Internet continues to evolve.
Programmers and researchers continually devise and implement new services.
Some of the most exciting services have existed for only a short time (e.g., World Wide Web).

One cannot appreciate the Internet without understanding that: 

The Internet is still in its infancy.

Internet researchers continue to find new ways to store, communicate, reference, and access information.

The continual change in available services and facilities has two important consequences.
First, continual change means that any printed list of services becomes out- of-date quickly.
Second, continual change means that an Internet user always has an opportunity to learn about new facilities.

Flexibility Permits Change

Why has the Internet been able to support such diverse services when other communication systems have not?
The answer is simple: the basic technology the Internet uses is more flexible than other technologies.

All the services described in this book communicate using the TCP/IP protocols described in Chapters 11 through 17.

TCP/IP allows computers to exchange pictures or sound as easily as electronic mail.
In fact, large computers that allow many users to run programs simultaneously usually only have one copy of TCP/IP software that all services use.
More important, many of the computers and Internet services that use TCP/IP have been invented after TCP/IP; the design is flexible enough to accommodate change.
To summarize, 

The basic communication technology used in the Internet is extremely flexible.
It supports a wide variety of computers and services that had not been invented when the technology was being developed.

A Digital Library 

The term digital library has been used to characterize a large storehouse of digital information accessible through computers.
Like a traditional library, a digital library serves as an archive of knowledge that spans many topics.
Like a newsstand, a digital library provides information that changes quickly.
Like a telephone or television, a digital library provides access to events as they occur.

Because information can be stored in many forms, a digital library can contain text, sounds, graphic images, still and moving pictures, and conversations.
In addition, a digital library can access information live as it occurs; the information need not be recorded.
For example, a digital library can provide access to services that show the changes in a user's face, sample the current weather conditions at a given geographic location, measure current traffic on a highway, or find the current delay at an airport.

Card Catalogs And Search Tools

Although many libraries now use computers, traditional libraries used a file of small cards to record the names of books and periodicals.
Known as a card catalog , the file contained two sets of cards, one ordered by author and the other ordered by title.

A library,s card catalog served as its primary index mechanism.
One could use the card catalog to find books or periodicals without searching the entire library.

Furthermore, one could locate an item either from the title or from the name of the author.

A digital library has a much richer and varied set of index and search mechanisms.
Computers make it possible to construct a system of menus that refer to files of information.
Alternatively, a reference to a piece of information can be embedded in a hypermedia document.
In addition, computers can search document contents.
The point is: 

Unlike a traditional library that used a card catalog, a digital library contains many index mechanisms and provides services that use the mechanisms to search for information.
As a result, a given piece of information can be located several ways.

Internet Services Can Be Integrated 

The search mechanisms in a digital library can be combined and integrated to form a cross-reference between services.
In fact, many of the services discussed in preceding chapters have been integrated, allowing one service to reference information available in another.

For example, a user can access the archie service via TELNET, or can reach veronica through gopher.
A World Wide Web document can contain a reference to a gopher menu.
If a user selects an item that corresponds to a gopher menu, the software temporarily leaves WWW and uses gopher to present the menu.
When the user finishes with gopher, the software returns to the WWW hypermedia document.

FTP directories can be integrated into gopher in the same way gopher menus are integrated into WWW.
Once a particular FTP directory has been integrated, one can use gopher to list and retrieve the files.
To a gopher user, the list of files appears as a gopher menu.

In another example of service integration, several sites provide FTP access via email.
To invoke the service, a user sends an e-mail message to a special address.
The e-mail message contains the name of a file the user wishes to retrieve.
When the message reaches the special address, a program uses FTP to retrieve the requested file, and sends the results back to the user in a second e-mail message.
For example, sending the e-mail message help to: ftpmail@dec.com provides information on how one can access FTP from e-mail.

Such facilities are especially helpful for users who can send e-mail but do not have access to FTP.
The idea is fundamental: 

Although each Internet service has been designed independently, services can be combined in interesting ways.
A given service can access information available from other services.

Mr. Dewey, Where Are You?

For centuries, librarians struggled to organize archives of the world's knowledge.
Should books be ordered by title, author, or subject?
Should a library mix works of fiction and nonfiction, or keep them separate? 

Melvil Dewey proposed a solution to the problem of organizing a library.
He invented a universal numbering scheme, known as the Dewey Decimal System , that allows librarians to organize books by topic.

The scheme was successful in standardizing the organization of libraries.

The Internet digital library desperately needs an analogous organization scheme.
Although many tools have been developed, information is still organized in random ways.
For example, consider gopher menus.
In most organizations, individuals or small groups can decide to run a gopher server.
Each group can choose the information to include and decide how menus will appear in its server; there is little uniformity.
The result is chaos - the menus in one gopher server do not resemble the menus in another.
After a user learns to navigate the menu system at one company, they must learn a new menu system when they contact another company.
Similarly, the menu system at one university does not resemble the menu system at another.
In short,

Because each computer on the Internet that offers a service can organize information however it chooses there is little similarity among servers.

Information In The Digital Library 

We have focused on the services used to locate and access information in the digital library without considering details of the information itself.
One might wonder, "exactly what information is available?
" Or one might ask, "where are the servers that contain the most interesting information?
" Such questions are equivalent to asking, "exactly what best-selling novel in my local library will I enjoy the most?
" or, "which newspaper at my local newsstand contains headlines I will find most interesting?" 

The answers to such questions depend on the individual who asks.
Furthermore, the questions are extremely difficult to answer when they refer to a digital library because the information is dynamic.
For example, some Internet discussions last a few minutes, others last for days, and a few archives persist for years.
In a digital library, one must rely on automated search tools to find items of interest.
One need only supply key words, phrases, or other descriptions to browsing and searching services to find information.

What Is The Internet? 

This book begins with the question.
"What is the Internet?
" We can summarize the answer in a one-paragraph description: 

The Internet is a wildly-successful rapidly-growing global digital library built on a remarkably flexible communication technology.
The Internet digital library offers a variety of services used to create browse access search view and communicate information on a diverse set of topics ranging from the results of scientific experiments to discussions of recreational activities.
Information in the Internet digital library can herecorded in memos organized into menus stored as hypermedia documents or stored in textual documents.
In addition information accessible through the digital library can consist of data including audio and video that is gathered communicated and delivered instantly without being stored.
Furthermore because the services have been integrated and cross-referenced a user can move seamlessly from the information on one computer to information on another computer and from one access service to another.

A Personal Note 

At a recent meeting of the network committee at the university where I work, the library staff described how they were enthusiastically installing servers that will allow students, faculty, and outsiders to access the library through the Internet.
I was amazed to hear librarians discuss e-mail, Mosaic, gopher, the World Wide Web, and card catalogs on the network.

As I sat there listening to the discussion, I suddenly realized that the world had changed dramatically in a few years, and the change will continue.
Librarians understand that in the future, knowledge will be stored in digital form, transmitted over networks, and indexed by computer.
They expect that the next generation of students will use computer networks to locate and access information.
Librarians are not merely experimenting with new technologies; they are preparing for a digital future.
In a few years, libraries as we know them will start to disappear, and information will be found on "the Net".

[1] Appendix 2 contains a short summary of over a dozen additional services.
